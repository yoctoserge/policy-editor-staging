{"version":3,"sources":["store/dashboard/dashboard.types.ts","utils/styles.hook.ts","store/dashboard/dashboard.hooks.ts","store/action-types.ts","store/dashboard/dashboard.actions.ts","resources/policy-editor-tab-icons/icon-botdefense.svg","component/dashboard/main.sidebar.component.tsx","component/dashboard/main.appbar.component.tsx","component/dashboard/policy-editor.dashboard.component.tsx","component/application-preset/application-preset.component.tsx","component/policy-editor/controls/policy-editor.tabs.control.tsx","resources/policy-editor-tab-icons/icon-filetypes.svg","resources/policy-editor-tab-icons/icon-gear.svg","resources/policy-editor-tab-icons/icon-headers.svg","resources/policy-editor-tab-icons/icon-lock.svg","resources/policy-editor-tab-icons/icon-methods.svg","resources/policy-editor-tab-icons/icon-parameters.svg","resources/policy-editor-tab-icons/icon-signatures.svg","resources/policy-editor-tab-icons/icon-url.svg","store/policy-editor/policy-editor.types.ts","component/policy-editor/model/policy-editor.tabs.model.tsx","store/policy-editor/policy-editor.hooks.ts","store/policy-editor/policy-editor.actions.ts","component/policy-editor/controls/grid.field-value.control.tsx","store/policy-editor/visitor/interface/base.visitor.ts","model/policy-editor.defaults.model.ts","component/policy-editor/controls/field-control/text-edit.field-control.tsx","store/policy-editor/visitor/imp/general-settings.visitor.ts","component/policy-editor/pages/general-settings.page.tsx","component/policy-editor/dialogs/advanced-settings.dialog.tsx","component/policy-editor/controls/grid.table-value.control.tsx","store/policy-editor/visitor/imp/blocking-settings-field.factory.ts","store/policy-editor/visitor/factory/interface/base.field-resolver-visitor-factory.ts","component/policy-editor/controls/field-control/label.field-control.tsx","component/policy-editor/controls/field-control/checkbox.field-control.tsx","store/policy-editor/visitor/imp/blocking-settings-field.resolver.ts","store/policy-editor/visitor/factory/imp/blocking-settings.visitor-factory.ts","component/policy-editor/pages/blocking-settings.page.tsx","store/policy-editor/visitor/imp/methods-field.factory.ts","store/policy-editor/visitor/imp/methods-field.resolver.ts","store/policy-editor/visitor/factory/imp/methods.visitor-factory.ts","component/policy-editor/pages/methods.page.tsx","store/policy-editor/visitor/imp/urls-field.factory.ts","component/policy-editor/controls/field-control/drop-list.field-control.tsx","store/policy-editor/visitor/imp/urls-field.resolver.ts","store/policy-editor/visitor/factory/imp/urls.visitor-factory.ts","store/policy-editor/visitor/services/json-urls.services.ts","component/policy-editor/pages/urls.page.tsx","store/policy-editor/visitor/imp/file-types-field.factory.ts","store/policy-editor/visitor/imp/file-types-field.resolver.ts","store/policy-editor/visitor/factory/imp/file-types.visitor-factory.ts","component/policy-editor/pages/file-types.page.tsx","store/policy-editor/visitor/imp/headers-field.factory.ts","store/policy-editor/visitor/imp/headers-field.resolver.ts","store/policy-editor/visitor/factory/imp/headers.visitor-factory.ts","component/policy-editor/pages/headers.page.tsx","store/policy-editor/visitor/imp/parameters-field.factory.ts","store/policy-editor/visitor/imp/parameters-field.resolver.ts","store/policy-editor/visitor/factory/imp/parameters.visitor-factory.ts","component/policy-editor/pages/parameters.page.tsx","component/policy-editor/controls/policy-editor.page.factory.tsx","component/policy-editor/controls/curren-policy.control.tsx","component/policy-editor/policy-editor.component.tsx","component/policy-wizard/policy-wizard.component.tsx","store/policy-editor/visitor/services/policy-editor-preprocessor.services.ts","App.tsx","store/reducer.base.ts","store/dashboard/handler/dashboard-module-set.handler.ts","store/dashboard/dashboard.reducer.ts","store/policy-editor/handler/policyeditor-page-set.handler.ts","store/policy-editor/handler/policyeditor-jsontext-set.handler.ts","store/policy-editor/handler/policyeditor-json-visit.handler.ts","store/policy-editor/handler/policyeditor-jsonsrc-set.handler.ts","store/policy-editor/policy-editor.reducer.ts","store/index.ts","storage/session.storage.ts","index.tsx"],"names":["DashboardModuleEnum","drawerWidth","useStyles","makeStyles","theme","createStyles","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","title","flexGrow","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","overflow","maxWidth","minWidth","contentShift","nested","paddingLeft","nested2","ellipsis","textOverflow","sectionButtons","margin","hidden","pageContent","index","useDashboardState","useSelector","state","dashboardState","DASHBOARD_MODULE_SET","POLICY_EDITOR_PAGE_SET","POLICY_EDITOR_JSON_TEXT_SET","POLICY_EDITOR_JSON_SRC_SET","POLICY_EDITOR_JSON_VISIT","dashboardModuleSet","currentModule","type","_path","_path2","_path3","_path4","_path5","_path6","_path7","MainSidebarComponent","onDrawerClose","classes","dispatch","useDispatch","className","IconButton","onClick","ChevronLeft","Divider","List","text","id","PolicyEditor","icon","Edit","PolicyWizard","Assistant","ApplicationPreset","Apps","map","ListItem","button","selected","ListItemIcon","ListItemText","primary","GetApp","Share","MainAppbarComponent","open","onDrawerOpen","Toolbar","color","aria-label","edge","clsx","Typography","variant","noWrap","PolicyEditorDashboardComponent","children","useState","setOpen","CssBaseline","AppBar","position","Drawer","anchor","paper","ApplicationPresetComponent","EditorTabsControl","withStyles","borderBottom","palette","divider","indicator","backgroundColor","main","Tabs","EditorTabControl","textTransform","fontWeight","typography","fontWeightRegular","opacity","fontWeightMedium","props","Tab","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgIconBotdefense","_ref","svgRef","titleId","fill","xmlns","ref","d","stroke","strokeLinecap","strokeLinejoin","ForwardRef","SvgIconFiletypes","SvgIconGear","strokeWidth","SvgIconHeaders","SvgIconLock","SvgIconMethods","SvgIconParameters","SvgIconSignatures","SvgIconUrl","PolicyEditorPageEnum","createLabel","hasSubmenu","Box","style","verticalAlign","ExpandMore","iconProps","height","viewport","TabsTree","label","GeneralSettings","BlockingSettings","Methods","URLs","Filetypes","Headers","Parameters","Signatures","disabled","BotDefense","usePolicyEditorDispatch","usePolicyEditorState","policyEditorState","policyEditorJsonTextSet","strPolicy","policyEditorJsonVisit","visitor","policyEditorJsonSrcSet","url","policySrcUrl","GridFieldValueControl","rows","selectedIndex","setSelectedIndex","Grid","container","item","xs","row","undefined","controlInfo","createControl","fullWidth","hiddenLabel","onSelect","onBlur","BaseVisitor","json","useVisitor","TVisitor","jsonCurrentPolicy","defaultGeneralSettings","policy","name","template","applicationLanguage","enforcementMode","TextEditFieldControl","currentValue","onValueChange","cellProps","controlProps","TableCell","size","TextField","value","onChange","e","GeneralSettingsVisitor","_get","currentJson","_set","GeneralSettingsPage","generalSettingsVisitor","getBasicRows","Transition","React","forwardRef","Slide","direction","DialogAppBar","DialogTitle","flex","AdvancedSettingsDialog","handleClose","Dialog","fullScreen","onClose","TransitionComponent","Button","autoFocus","StyledTableCell","head","background","default","contrastText","StyledTableRow","action","hover","TableRow","DroppableComponent","droppableId","provided","TableBody","innerRef","droppableProps","placeholder","GridTableValueControl","settingsName","titles","visitors","dnd","onDragEnd","setSelected","advancedSettingsDialogOpen","setAdvancedSettingsDialogOpen","selectedItemIndex","setSelectedItemIndex","useEffect","Array","allSelected","some","x","anySelected","itemIndex","getAdvancedRows","createAdvancedSettingsControls","result","TableContainer","component","Table","TableHead","align","Checkbox","checked","currentTarget","removedOffset","remove","onRemoveSelected","v","vIndex","paddingRight","DragIndicator","hasAdvancedRows","createCell","draggableId","snapshot","draggableProps","dragHandleProps","isDragging","draggableStyle","BlockingSettingsFieldFactory","path","violations","push","alarm","block","BaseFieldResolverVisitorFactory","LabelFieldControl","CheckboxFieldControl","BlockingSettingsFieldResolver","rowIndex","allViolations","Policy","getAllViolations","find","resolveViolationTitle","splice","BlockingSettingsVisitorFactory","s","BlockingSettingsPage","anchorEl","setAnchorEl","fieldFactoryVisitor","getResolvers","Boolean","MenuItem","MethodsFieldFactory","methods","MethodsFieldResolver","MethodsVisitorFactory","m","MethodsPage","methodsFieldFactory","UrlsFieldFactory","urls","method","protocol","attackSignaturesCheck","metacharsOnUrlCheck","wildcardOrder","DropListFieldControl","items","Select","UrlsFieldResolver","UrlsVisitorFactory","JsonUrlsServices","sourceIndex","destinationIndex","move","forEach","UrlsPage","urlsFieldFactory","changeOrder","destination","FileTypesFieldFactory","fileTypes","allowed","checkUrlLength","urlLength","checkQueryStringLength","queryStringLength","checkPostDataLength","postDataLength","checkRequestLength","requestLength","responseCheck","FileTypesFieldResolver","filetypes","FileTypesVisitorFactory","ft","FileTypesPage","filetypesFieldFactory","HeadersFieldFactory","decodeValueAsBase64","htmlNormalization","mandatory","allowRepeatedOccurrences","checkSignatures","HeadersFieldResolver","headers","HeadersVisitorFactory","h","HeadersPage","headersFieldFactory","ParametersFieldFactory","level","parameterLocation","valueType","allowEmptyValue","checkMaxValueLength","allowRepeatedParameterName","sensitiveParameter","checkMetachars","metacharsOnParameterValueCheck","ParametersFieldResolver","location","ParametersVisitorFactory","parameters","ParametersPage","parametersFieldFactory","PolicyEditorPageFactory","pages","page","CurrentPolicyControl","jsonText","onTextChange","code","setCode","highlight","languages","fontFamily","fontSize","JsonEditorContainer","Paper","CurrentPageContainer","ParseErrorOverlay","error","top","left","borderRadius","shape","zIndex","EditorPage","PolicyEditorComponent","currentPage","strCurrentPolicy","jsonParseError","currentTab","pageFactory","scrollButtons","_","tab","policyEditorPageSet","createPage","PolicyWizardComponent","PolicyEditorPreprocessorServices","body","JSON","parse","sort","l","r","stringify","Alert","elevation","Dashboard","match","errorMessage","setErrorMessage","qs","queryString","window","search","handleErrorClose","event","reason","fetch","decodeURI","then","a","policyEditorPreprocessor","preprocess","catch","CircularProgress","uiFactory","Snackbar","anchorOrigin","vertical","horizontal","message","severity","App","ReducerBase","_currentState","_reducerFactory","processor","produce","draft","dashboardModuleSetHandler","currentState","dashboardStateInit","DashboardReducerHandlerFactory","policyEditorPageSetHandler","policyEditorJsonTextSetHandler","policyEditorJsonVisitHandler","policyEditorJsonSrcSetHandler","policyEditorStateInit","PolicyEditorReducerHandlerFactory","ApplicationReducers","combineReducers","dashboardReducerHandlerFactory","process","policyEditorReducerHandlerFactory","stateVar","SessionStorage","serializedState","sessionStorage","getItem","setItem","persistedState","loadState","composeEnhancers","composeWithDevTools","trace","traceLimit","store","createStore","subscribe","saveState","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9704e6da.chunk.js","sourcesContent":["import { Action } from \"redux\";\nimport { ReducerHandler } from \"../reducer.base\";\n\nexport enum DashboardModuleEnum {\n  PolicyEditor,\n  PolicyWizard,\n  ApplicationPreset,\n}\n\nexport type DashboardState = {\n  currentModule: DashboardModuleEnum;\n};\n\nexport interface DashboardAction\n  extends Action,\n    Partial<{ currentModule: DashboardModuleEnum }> {}\n\nexport type DashboardDispatch = (args: DashboardAction) => DashboardAction;\nexport type DashboardReducerHandler = ReducerHandler<\n  DashboardAction,\n  DashboardState\n>;\n","import { createStyles, makeStyles } from \"@material-ui/core/styles\";\n\nconst drawerWidth = 340;\n\nexport const useStyles = makeStyles(\n  (theme) => {\n    return createStyles({\n      root: {\n        display: \"flex\",\n      },\n      appBar: {\n        transition: theme.transitions.create([\"margin\", \"width\"], {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n      },\n      title: {\n        flexGrow: 1,\n      },\n      appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create([\"margin\", \"width\"], {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.enteringScreen,\n        }),\n      },\n      menuButton: {\n        marginRight: theme.spacing(2),\n      },\n      hide: {\n        display: \"none !important\",\n      },\n      drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n      },\n      drawerPaper: {\n        width: drawerWidth,\n      },\n      drawerHeader: {\n        display: \"flex\",\n        alignItems: \"center\",\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: \"flex-end\",\n      },\n      content: {\n        overflow: \"scroll\",\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create(\"margin\", {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n        maxWidth: \"100vw\",\n        //        maxHeight: `calc(100vh - ${theme.mixins.toolbar.minHeight}px)`,\n        minWidth: \"720px\",\n      },\n      contentShift: {\n        transition: theme.transitions.create(\"margin\", {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n        maxWidth: `calc(100vw - ${drawerWidth}px)`,\n      },\n      nested: {\n        paddingLeft: theme.spacing(4),\n      },\n      nested2: {\n        paddingLeft: theme.spacing(8),\n      },\n      ellipsis: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n      },\n      sectionButtons: {\n        margin: theme.spacing(2),\n      },\n      hidden: {\n        display: \"none\",\n      },\n      pageContent: {\n        padding: theme.spacing(1),\n      },\n    });\n  },\n  { index: 1 }\n);\n","import { DashboardDispatch, DashboardState } from \"./dashboard.types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ApplicationState } from \"../index\";\n\nexport const useDashboardDispatch = () => useDispatch<DashboardDispatch>();\nexport const useDashboardState: () => DashboardState = () =>\n  useSelector((state: ApplicationState) => state.dashboardState);\n","export const DASHBOARD_MODULE_SET = \"dashboard::module::set\";\n\nexport const POLICY_EDITOR_PAGE_SET = \"policy-editor::page:set\";\nexport const POLICY_EDITOR_JSON_TEXT_SET = \"policy-editor::json::text::set\";\nexport const POLICY_EDITOR_JSON_SRC_SET = \"policy-editor::json::src::set\";\nexport const POLICY_EDITOR_JSON_VISIT = \"policy-editor::json::visit\";\n","import { DashboardAction, DashboardModuleEnum } from \"./dashboard.types\";\nimport { DASHBOARD_MODULE_SET } from \"../action-types\";\n\nexport function dashboardModuleSet(\n  currentModule: DashboardModuleEnum\n): Pick<DashboardAction, \"type\" | \"currentModule\"> {\n  return {\n    type: DASHBOARD_MODULE_SET,\n    currentModule,\n  };\n}\n","var _path, _path2, _path3, _path4, _path5, _path6, _path7;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIconBotdefense(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10 8.125V4.375\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.25 11.875V8.125\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.75 11.875V8.125\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10 15.625V11.875\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.5 8.125H17.5\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.5 11.875H17.5\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.5 4.375H2.5V15.625H17.5V4.375Z\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconBotdefense);\nexport default __webpack_public_path__ + \"static/media/icon-botdefense.5cc69900.svg\";\nexport { ForwardRef as ReactComponent };","import * as React from \"react\";\nimport { useStyles } from \"../../utils/styles.hook\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport {\n  Apps,\n  Assistant,\n  ChevronLeft,\n  Edit,\n  GetApp,\n  Share,\n} from \"@material-ui/icons\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {\n  useDashboardDispatch,\n  useDashboardState,\n} from \"../../store/dashboard/dashboard.hooks\";\nimport { DashboardModuleEnum } from \"../../store/dashboard/dashboard.types\";\nimport { dashboardModuleSet } from \"../../store/dashboard/dashboard.actions\";\n\nexport type MainSidebarProps = Readonly<{ onDrawerClose: any }>;\n\nexport const MainSidebarComponent: React.FunctionComponent<MainSidebarProps> =\n  ({ onDrawerClose }) => {\n    const classes = useStyles();\n    const dispatch = useDashboardDispatch();\n    const state = useDashboardState();\n\n    return (\n      <React.Fragment>\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={onDrawerClose}>\n            <ChevronLeft />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {[\n            {\n              text: \"Policy Editor\",\n              id: DashboardModuleEnum.PolicyEditor,\n              icon: <Edit />,\n              onClick: () => {\n                dispatch(dashboardModuleSet(DashboardModuleEnum.PolicyEditor));\n              },\n            },\n            {\n              text: \"Policy Wizard\",\n              id: DashboardModuleEnum.PolicyWizard,\n              icon: <Assistant />,\n              onClick: () => {\n                dispatch(dashboardModuleSet(DashboardModuleEnum.PolicyWizard));\n              },\n            },\n            {\n              text: \"Application Preset\",\n              id: DashboardModuleEnum.ApplicationPreset,\n              icon: <Apps />,\n              onClick: () => {\n                dispatch(\n                  dashboardModuleSet(DashboardModuleEnum.ApplicationPreset)\n                );\n              },\n            },\n          ].map(({ text, id, icon, onClick }, index) => (\n            <ListItem\n              button\n              key={index}\n              onClick={() => onClick()}\n              selected={id === state.currentModule}\n            >\n              <ListItemIcon>{icon}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {[\n            {\n              text: \"Download\",\n              icon: <GetApp />,\n              onClick: () => {},\n            },\n            {\n              text: \"Share\",\n              icon: <Share />,\n              onClick: () => {},\n            },\n          ].map(({ text, icon, onClick }, index) => (\n            <ListItem button key={index} onClick={() => onClick()}>\n              <ListItemIcon>{icon}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </React.Fragment>\n    );\n  };\n","import * as React from \"react\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport clsx from \"clsx\";\nimport { useStyles } from \"../../utils/styles.hook\";\nimport { Toolbar } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport type MainAppbarProps = Readonly<{\n  open: boolean;\n  onDrawerOpen: any;\n}>;\n\nexport const MainAppbarComponent: React.FunctionComponent<MainAppbarProps> = ({\n  open,\n  onDrawerOpen,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Toolbar>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick={onDrawerOpen}\n        edge=\"start\"\n        className={clsx(classes.menuButton, open && classes.hide)}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography variant=\"h6\" noWrap>\n        WAF Policy Editor\n      </Typography>\n    </Toolbar>\n  );\n};\n","import * as React from \"react\";\nimport clsx from \"clsx\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\n\nimport { useState } from \"react\";\nimport { useStyles } from \"../../utils/styles.hook\";\nimport { MainSidebarComponent } from \"./main.sidebar.component\";\nimport { MainAppbarComponent } from \"./main.appbar.component\";\n\nexport const PolicyEditorDashboardComponent: React.FunctionComponent = ({\n  children,\n}) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const onDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const onDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <MainAppbarComponent onDrawerOpen={onDrawerOpen} open={open} />\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <MainSidebarComponent onDrawerClose={onDrawerClose} />\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        {children}\n      </main>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nexport const ApplicationPresetComponent: React.VoidFunctionComponent = () => {\n  return <Typography>Application Preset is under development</Typography>;\n};\n","import withStyles from \"@material-ui/core/styles/withStyles\";\nimport { createStyles, Theme } from \"@material-ui/core\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport * as React from \"react\";\n\nexport type EditorTabProps = {\n  label: JSX.Element;\n  disabled?: boolean;\n};\n\nexport const EditorTabsControl = withStyles((theme) =>\n  createStyles({\n    root: {\n      borderBottom: `1px solid ${theme.palette.divider}`,\n    },\n    indicator: {\n      backgroundColor: theme.palette.primary.main,\n    },\n  })\n)(Tabs);\n\nexport const EditorTabControl = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      textTransform: \"none\",\n      minWidth: 72,\n      fontWeight: theme.typography.fontWeightRegular,\n      marginRight: theme.spacing(4),\n      \"&:hover\": {\n        color: theme.palette.primary.main,\n        opacity: 1,\n      },\n      \"&$selected\": {\n        color: theme.palette.primary.main,\n        fontWeight: theme.typography.fontWeightMedium,\n      },\n      \"&:focus\": {\n        color: theme.palette.primary.main,\n      },\n    },\n    selected: {},\n  })\n)((props: EditorTabProps) => <Tab {...props} />);\n","var _path, _path2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIconFiletypes(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.9444 16.25H3.07692C2.92405 16.2496 2.77757 16.1886 2.66947 16.0805C2.56137 15.9724 2.50045 15.8259 2.5 15.6731V6.25H16.875C17.0408 6.25 17.1997 6.31585 17.3169 6.43306C17.4342 6.55027 17.5 6.70924 17.5 6.875V15.6944C17.5 15.8418 17.4415 15.9831 17.3373 16.0873C17.2331 16.1915 17.0918 16.25 16.9444 16.25V16.25Z\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.5 6.25V4.375C2.5 4.20924 2.56585 4.05027 2.68306 3.93306C2.80027 3.81585 2.95924 3.75 3.125 3.75H7.24112C7.32319 3.75 7.40447 3.76617 7.48029 3.79758C7.55612 3.82898 7.62502 3.87502 7.68306 3.93306L10 6.25\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconFiletypes);\nexport default __webpack_public_path__ + \"static/media/icon-filetypes.35d024bd.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIconGear(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10 13.75C12.0711 13.75 13.75 12.0711 13.75 10C13.75 7.92893 12.0711 6.25 10 6.25C7.92893 6.25 6.25 7.92893 6.25 10C6.25 12.0711 7.92893 13.75 10 13.75Z\",\n    stroke: \"currentColor\",\n    strokeWidth: 1\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.59935 3.44944L8.12517 2.34413C8.04608 2.28463 7.95397 2.24478 7.85645 2.22786C7.75893 2.21094 7.65879 2.21744 7.56427 2.24682C7.10771 2.38979 6.66475 2.57306 6.24063 2.79446C6.15284 2.84051 6.07725 2.90678 6.02012 2.9878C5.96298 3.06882 5.92593 3.16227 5.91203 3.26043L5.65142 5.08472C5.55209 5.17278 5.45484 5.26436 5.35967 5.35947C5.26453 5.45461 5.17293 5.55189 5.08485 5.6513L5.08481 5.65133L3.26085 5.91217C3.16284 5.92602 3.06954 5.96297 2.98862 6.01996C2.90769 6.07696 2.84148 6.15236 2.79542 6.23997C2.57367 6.66391 2.39005 7.10672 2.24671 7.56317C2.21719 7.65781 2.2106 7.75812 2.22749 7.85581C2.24438 7.9535 2.28426 8.04578 2.34384 8.12502L3.44953 9.59926C3.44155 9.73176 3.43754 9.86529 3.4375 9.99983C3.4375 10.1344 3.44151 10.2679 3.44953 10.4005L3.44953 10.4006L2.34422 11.8747C2.28472 11.9538 2.24487 12.0459 2.22795 12.1435C2.21103 12.241 2.21753 12.3411 2.24691 12.4356C2.38988 12.8922 2.57315 13.3352 2.79455 13.7593C2.84061 13.8471 2.90688 13.9227 2.9879 13.9798C3.06892 14.0369 3.16236 14.074 3.26052 14.0879L5.08481 14.3485C5.17286 14.4478 5.26445 14.5451 5.35956 14.6402C5.4547 14.7354 5.55197 14.827 5.65139 14.9151L5.65142 14.9151L5.91225 16.7391C5.92611 16.8371 5.96306 16.9304 6.02005 17.0113C6.07704 17.0922 6.15245 17.1584 6.24006 17.2045C6.664 17.4262 7.10681 17.6099 7.56326 17.7532C7.6579 17.7827 7.75821 17.7893 7.8559 17.7724C7.95359 17.7555 8.04587 17.7157 8.12511 17.6561L9.59935 16.5504C9.73185 16.5584 9.86538 16.5624 9.99992 16.5624C10.1345 16.5624 10.268 16.5584 10.4006 16.5504L10.4007 16.5504L11.8748 17.6557C11.9539 17.7152 12.046 17.755 12.1436 17.772C12.2411 17.7889 12.3412 17.7824 12.4357 17.753C12.8923 17.61 13.3353 17.4268 13.7594 17.2054C13.8472 17.1593 13.9228 17.093 13.9799 17.012C14.037 16.931 14.0741 16.8376 14.088 16.7394L14.3486 14.9151C14.4479 14.8271 14.5452 14.7355 14.6403 14.6404C14.7355 14.5452 14.8271 14.4479 14.9152 14.3485L14.9152 14.3485L16.7392 14.0877C16.8372 14.0738 16.9305 14.0369 17.0114 13.9799C17.0923 13.9229 17.1585 13.8475 17.2046 13.7599C17.4263 13.3359 17.61 12.8931 17.7533 12.4367C17.7828 12.342 17.7894 12.2417 17.7725 12.144C17.7556 12.0463 17.7158 11.9541 17.6562 11.8748L16.5505 10.4006C16.5585 10.2681 16.5625 10.1345 16.5625 9.99999C16.5625 9.86545 16.5585 9.73189 16.5505 9.59931L16.5505 9.59926L17.6558 8.12508C17.7153 8.04599 17.7551 7.95388 17.7721 7.85636C17.789 7.75884 17.7825 7.6587 17.7531 7.56418C17.6101 7.10761 17.4269 6.66466 17.2055 6.24054C17.1594 6.15275 17.0931 6.07716 17.0121 6.02002C16.9311 5.96289 16.8376 5.92584 16.7395 5.91193L14.9152 5.65133C14.8271 5.552 14.7356 5.45474 14.6404 5.35958C14.5453 5.26444 14.448 5.17284 14.3486 5.08476L14.3486 5.08472L14.0878 3.26075C14.0739 3.16275 14.037 3.06944 13.98 2.98852C13.923 2.9076 13.8476 2.84138 13.7599 2.79533C13.336 2.57358 12.8932 2.38996 12.4368 2.24662C12.3421 2.2171 12.2418 2.21051 12.1441 2.2274C12.0464 2.24429 11.9541 2.28417 11.8749 2.34374L10.4007 3.44944C10.2682 3.44146 10.1346 3.43745 10.0001 3.43741C9.86554 3.43741 9.73198 3.44142 9.5994 3.44944L9.59935 3.44944Z\",\n    stroke: \"currentColor\",\n    strokeWidth: 1\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconGear);\nexport default __webpack_public_path__ + \"static/media/icon-gear.0c9099e6.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIconHeaders(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.25 11.25H3.75C3.40482 11.25 3.125 11.5298 3.125 11.875V15C3.125 15.3452 3.40482 15.625 3.75 15.625H16.25C16.5952 15.625 16.875 15.3452 16.875 15V11.875C16.875 11.5298 16.5952 11.25 16.25 11.25Z\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.25 4.375H3.75C3.40482 4.375 3.125 4.65482 3.125 5V8.125C3.125 8.47018 3.40482 8.75 3.75 8.75H16.25C16.5952 8.75 16.875 8.47018 16.875 8.125V5C16.875 4.65482 16.5952 4.375 16.25 4.375Z\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconHeaders);\nexport default __webpack_public_path__ + \"static/media/icon-headers.735a8881.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIconLock(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.99951 12.5C10.8625 12.5 11.562 11.8004 11.562 10.9375C11.562 10.0746 10.8625 9.375 9.99951 9.375C9.13657 9.375 8.43701 10.0746 8.43701 10.9375C8.43701 11.8004 9.13657 12.5 9.99951 12.5Z\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.99951 12.5V14.375\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.2495 6.875H3.74951C3.40433 6.875 3.12451 7.15482 3.12451 7.5V16.25C3.12451 16.5952 3.40433 16.875 3.74951 16.875H16.2495C16.5947 16.875 16.8745 16.5952 16.8745 16.25V7.5C16.8745 7.15482 16.5947 6.875 16.2495 6.875Z\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.18701 6.875V4.0625C7.18701 3.31658 7.48333 2.60121 8.01077 2.07376C8.53822 1.54632 9.25359 1.25 9.99951 1.25C10.7454 1.25 11.4608 1.54632 11.9882 2.07376C12.5157 2.60121 12.812 3.31658 12.812 4.0625\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconLock);\nexport default __webpack_public_path__ + \"static/media/icon-lock.5403f9fb.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIconMethods(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.3125 16.875C6.52062 16.875 7.5 15.8956 7.5 14.6875C7.5 13.4794 6.52062 12.5 5.3125 12.5C4.10438 12.5 3.125 13.4794 3.125 14.6875C3.125 15.8956 4.10438 16.875 5.3125 16.875Z\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.3125 7.5C6.52062 7.5 7.5 6.52062 7.5 5.3125C7.5 4.10438 6.52062 3.125 5.3125 3.125C4.10438 3.125 3.125 4.10438 3.125 5.3125C3.125 6.52062 4.10438 7.5 5.3125 7.5Z\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.3125 7.5V12.5\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.6877 16.875C15.8958 16.875 16.8752 15.8956 16.8752 14.6875C16.8752 13.4794 15.8958 12.5 14.6877 12.5C13.4796 12.5 12.5002 13.4794 12.5002 14.6875C12.5002 15.8956 13.4796 16.875 14.6877 16.875Z\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.6877 12.5L14.6876 9.36571C14.6875 8.3712 14.2924 7.41744 13.5892 6.71421L10.625 3.75\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.625 6.875V3.75H13.75\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconMethods);\nexport default __webpack_public_path__ + \"static/media/icon-methods.13022c11.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIconParameters(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.4524 2.89582L11.1742 6.1741L11.6161 8.3838L13.8258 8.82575L17.1041 5.54747L17.1044 5.54734C17.5102 6.50517 17.6072 7.56569 17.382 8.58126C17.1568 9.59684 16.6206 10.5169 15.848 11.2135C15.0754 11.91 14.1049 12.3484 13.0715 12.4675C12.0381 12.5866 10.9933 12.3806 10.0824 11.8781L10.0825 11.8779L5.7008 16.9507C5.3491 17.302 4.8723 17.4993 4.3752 17.4992C3.8781 17.499 3.40141 17.3015 3.04991 16.95C2.69841 16.5985 2.50087 16.1218 2.50073 15.6247C2.50059 15.1276 2.69785 14.6508 3.04915 14.2991L8.12192 9.91742L8.12181 9.91748C7.61931 9.00666 7.41327 7.96183 7.53239 6.92843C7.65151 5.89504 8.08986 4.92449 8.78641 4.15188C9.48296 3.37928 10.4031 2.84306 11.4186 2.61788C12.4342 2.39269 13.4947 2.48974 14.4526 2.89551L14.4524 2.89582Z\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconParameters);\nexport default __webpack_public_path__ + \"static/media/icon-parameters.3ee8234f.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIconSignatures(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.5 16.8749H3.75C3.58424 16.8749 3.42527 16.8091 3.30806 16.6918C3.19085 16.5746 3.125 16.4157 3.125 16.2499V12.7588C3.125 12.6767 3.14117 12.5954 3.17258 12.5196C3.20398 12.4438 3.25002 12.3749 3.30806 12.3168L12.6831 2.94185C12.8003 2.82464 12.9592 2.75879 13.125 2.75879C13.2908 2.75879 13.4497 2.82464 13.5669 2.94185L17.0581 6.43296C17.1753 6.55017 17.2411 6.70915 17.2411 6.87491C17.2411 7.04067 17.1753 7.19964 17.0581 7.31685L7.5 16.8749Z\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.625 5L15 9.375\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.875 16.875H7.50003L3.16479 12.5398\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconSignatures);\nexport default __webpack_public_path__ + \"static/media/icon-signatures.313f79ce.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIconUrl(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.55805 5.58063L11.1049 4.03383C11.424 3.71439 11.803 3.46095 12.2201 3.288C12.6372 3.11505 13.0843 3.02598 13.5359 3.02588C13.9874 3.02577 14.4346 3.11464 14.8518 3.28739C15.269 3.46014 15.648 3.7134 15.9673 4.0327C16.2866 4.352 16.5399 4.73107 16.7127 5.14827C16.8854 5.56548 16.9743 6.01263 16.9742 6.46418C16.9741 6.91573 16.885 7.36284 16.712 7.77996C16.5391 8.19708 16.2857 8.57604 15.9662 8.89519L13.7565 11.1049C13.4373 11.4241 13.0584 11.6773 12.6413 11.8501C12.2242 12.0228 11.7772 12.1117 11.3258 12.1117C10.8744 12.1117 10.4274 12.0228 10.0103 11.8501C9.59329 11.6773 9.21434 11.4241 8.89514 11.1049\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.4419 14.4195L8.89513 15.9663C8.57598 16.2858 8.19702 16.5392 7.7799 16.7121C7.36278 16.8851 6.91567 16.9742 6.46412 16.9743C6.01256 16.9744 5.56541 16.8855 5.14821 16.7128C4.73101 16.54 4.35193 16.2867 4.03264 15.9674C3.71334 15.6482 3.46008 15.2691 3.28733 14.8519C3.11458 14.4347 3.02571 13.9875 3.02582 13.536C3.02592 13.0844 3.11499 12.6373 3.28794 12.2202C3.46089 11.8031 3.71433 11.4241 4.03377 11.105L6.24348 8.89525C6.56268 8.57605 6.94163 8.32284 7.35868 8.15009C7.77574 7.97734 8.22274 7.88843 8.67416 7.88843C9.12558 7.88843 9.57258 7.97734 9.98963 8.15009C10.4067 8.32284 10.7856 8.57605 11.1048 8.89525\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconUrl);\nexport default __webpack_public_path__ + \"static/media/icon-url.0dcc6936.svg\";\nexport { ForwardRef as ReactComponent };","import { Action } from \"redux\";\nimport { ReducerHandler } from \"../reducer.base\";\n\nexport enum PolicyEditorPageEnum {\n  GeneralSettings,\n  BlockingSettings,\n  Methods,\n  URLs,\n  Filetypes,\n  Headers,\n  Parameters,\n  Signatures,\n  BotDefense,\n}\n\nexport type PolicyEditorState = {\n  currentTab: number;\n  currentPage: PolicyEditorPageEnum;\n  jsonCurrentPolicy: any;\n  strCurrentPolicy: string;\n  jsonParseError: boolean;\n  policySrcUrl: string;\n};\n\nexport interface PolicyEditorAction\n  extends Action,\n    Partial<{\n      currentTab: number;\n      currentPage: PolicyEditorPageEnum;\n      strPolicy: string;\n      visitor: (currentJson: any) => void;\n      policySrcUrl: string;\n    }> {}\n\nexport type PolicyEditorDispatch = (\n  args: PolicyEditorAction\n) => PolicyEditorAction;\nexport type PolicyEditorReducerHandler = ReducerHandler<\n  PolicyEditorAction,\n  PolicyEditorState\n>;\n","import { ExpandMore } from \"@material-ui/icons\";\nimport * as React from \"react\";\nimport Box from \"@material-ui/core/Box\";\n\nimport { ReactComponent as IconBotDefense } from \"../../../resources/policy-editor-tab-icons/icon-botdefense.svg\";\nimport { ReactComponent as IconFiletypes } from \"../../../resources/policy-editor-tab-icons/icon-filetypes.svg\";\nimport { ReactComponent as IconGear } from \"../../../resources/policy-editor-tab-icons/icon-gear.svg\";\nimport { ReactComponent as IconHeaders } from \"../../../resources/policy-editor-tab-icons/icon-headers.svg\";\nimport { ReactComponent as IconLock } from \"../../../resources/policy-editor-tab-icons/icon-lock.svg\";\nimport { ReactComponent as IconMethods } from \"../../../resources/policy-editor-tab-icons/icon-methods.svg\";\nimport { ReactComponent as IconParameters } from \"../../../resources/policy-editor-tab-icons/icon-parameters.svg\";\nimport { ReactComponent as IconSignatures } from \"../../../resources/policy-editor-tab-icons/icon-signatures.svg\";\nimport { ReactComponent as IconUrl } from \"../../../resources/policy-editor-tab-icons/icon-url.svg\";\nimport { PolicyEditorPageEnum } from \"../../../store/policy-editor/policy-editor.types\";\n\nfunction createLabel(hasSubmenu: boolean, text: string, icon: any) {\n  return (\n    <React.Fragment>\n      <Box>\n        <span style={{ verticalAlign: \"middle\" }}>{icon}</span>\n        <span style={{ verticalAlign: \"middle\" }}>{text}</span>\n        {hasSubmenu && <ExpandMore style={{ verticalAlign: \"middle\" }} />}\n      </Box>\n    </React.Fragment>\n  );\n}\n\nexport type PolicyEditorPageInfo = {\n  label: JSX.Element;\n  id: PolicyEditorPageEnum;\n  disabled?: boolean;\n};\n\nconst iconProps = {\n  style: { verticalAlign: \"middle\" },\n  width: 30,\n  height: 23,\n  color: \"inherit\",\n  viewport: \"0 0 20 20\",\n};\n\nexport const TabsTree: PolicyEditorPageInfo[] = [\n  {\n    label: createLabel(true, \"General Settings\", <IconGear {...iconProps} />),\n    id: PolicyEditorPageEnum.GeneralSettings,\n  },\n  {\n    label: createLabel(false, \"Blocking Settings\", <IconLock {...iconProps} />),\n    id: PolicyEditorPageEnum.BlockingSettings,\n  },\n  {\n    label: createLabel(false, \"Methods\", <IconMethods {...iconProps} />),\n    id: PolicyEditorPageEnum.Methods,\n  },\n  {\n    label: createLabel(false, \"URLs\", <IconUrl {...iconProps} />),\n    id: PolicyEditorPageEnum.URLs,\n  },\n  {\n    label: createLabel(true, \"File Types\", <IconFiletypes {...iconProps} />),\n    id: PolicyEditorPageEnum.Filetypes,\n  },\n  {\n    label: createLabel(false, \"Headers\", <IconHeaders {...iconProps} />),\n    id: PolicyEditorPageEnum.Headers,\n  },\n  {\n    label: createLabel(false, \"Parameters\", <IconParameters {...iconProps} />),\n    id: PolicyEditorPageEnum.Parameters,\n  },\n  {\n    label: createLabel(true, \"Signatures\", <IconSignatures {...iconProps} />),\n    id: PolicyEditorPageEnum.Signatures,\n    disabled: true,\n  },\n  {\n    label: createLabel(false, \"Bot Defense\", <IconBotDefense {...iconProps} />),\n    id: PolicyEditorPageEnum.BotDefense,\n    disabled: true,\n  },\n];\n","import { PolicyEditorDispatch, PolicyEditorState } from \"./policy-editor.types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ApplicationState } from \"../index\";\n\nexport const usePolicyEditorDispatch = () =>\n  useDispatch<PolicyEditorDispatch>();\nexport const usePolicyEditorState: () => PolicyEditorState = () =>\n  useSelector((state: ApplicationState) => state.policyEditorState);\n","import {\n  PolicyEditorAction,\n  PolicyEditorPageEnum,\n} from \"./policy-editor.types\";\nimport {\n  POLICY_EDITOR_JSON_SRC_SET,\n  POLICY_EDITOR_JSON_TEXT_SET,\n  POLICY_EDITOR_JSON_VISIT,\n  POLICY_EDITOR_PAGE_SET,\n} from \"../action-types\";\n\nexport function policyEditorPageSet(\n  currentTab: number,\n  currentPage: PolicyEditorPageEnum\n): Pick<PolicyEditorAction, \"type\" | \"currentTab\" | \"currentPage\"> {\n  return {\n    type: POLICY_EDITOR_PAGE_SET,\n    currentTab,\n    currentPage,\n  };\n}\n\nexport function policyEditorJsonTextSet(\n  strPolicy: string\n): Pick<PolicyEditorAction, \"type\" | \"strPolicy\"> {\n  return {\n    type: POLICY_EDITOR_JSON_TEXT_SET,\n    strPolicy,\n  };\n}\n\nexport function policyEditorJsonVisit(\n  visitor: (currentJson: any) => void\n): Pick<PolicyEditorAction, \"type\" | \"visitor\"> {\n  return {\n    type: POLICY_EDITOR_JSON_VISIT,\n    visitor,\n  };\n}\n\nexport function policyEditorJsonSrcSet(\n  url: string,\n  text: string\n): Pick<PolicyEditorAction, \"type\" | \"policySrcUrl\" | \"strPolicy\"> {\n  return {\n    type: POLICY_EDITOR_JSON_SRC_SET,\n    policySrcUrl: url,\n    strPolicy: text,\n  };\n}\n","import * as React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useState } from \"react\";\nimport { GridFieldValue } from \"./grid-field-value.type\";\n\nexport type GridFieldValueProps = {\n  rows: GridFieldValue[];\n};\n\nexport const GridFieldValueControl: React.FunctionComponent<GridFieldValueProps> =\n  ({ rows }) => {\n    const [selectedIndex, setSelectedIndex] = useState(-1);\n\n    return (\n      <Grid container spacing={1}>\n        <Grid container item spacing={1} xs={12}>\n          {rows.map((row, index) => {\n            return (\n              <React.Fragment key={index}>\n                <Grid container item alignItems={\"center\"} xs={3}>\n                  <Typography\n                    color={selectedIndex === index ? \"primary\" : undefined}\n                    variant=\"body2\"\n                  >\n                    {row.title}\n                  </Typography>\n                </Grid>\n                <Grid item xs={9}>\n                  {row.controlInfo.createControl({\n                    fullWidth: true,\n                    hiddenLabel: true,\n                    variant: \"filled\",\n                    margin: \"dense\",\n                    onSelect: () => setSelectedIndex(index),\n                    onBlur: () => setSelectedIndex(-1),\n                  })}\n                </Grid>\n              </React.Fragment>\n            );\n          })}\n        </Grid>\n      </Grid>\n    );\n  };\n","import { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport {\n  usePolicyEditorDispatch,\n  usePolicyEditorState,\n} from \"../../policy-editor.hooks\";\n\nexport abstract class BaseVisitor {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {}\n}\n\nexport function useVisitor<T extends BaseVisitor>(TVisitor: {\n  new (dispatch: PolicyEditorDispatch, json: any): T;\n}) {\n  const { jsonCurrentPolicy } = usePolicyEditorState();\n  return new TVisitor(usePolicyEditorDispatch(), jsonCurrentPolicy);\n}\n","export const defaultGeneralSettings = () => ({\n  policy: {\n    name: \"policy_name\",\n    template: {\n      name: \"POLICY_TEMPLATE_NGINX_BASE\",\n    },\n    applicationLanguage: \"utf-8\",\n    enforcementMode: \"blocking\",\n  },\n});\n\nexport const defaultBlockingSettings = (name: string) => ({\n  name: name,\n  alarm: true,\n  block: false,\n});\n\nexport const defaultMethods = () => ({\n  name: \"\",\n});\n\nexport const defaultUrls = (order: number) => ({\n  name: \"\",\n  type: \"explicit\",\n  method: \"*\",\n  protocol: \"http\",\n  attackSignaturesCheck: true,\n  metacharsOnUrlCheck: true,\n  wildcardOrder: order,\n});\n\nexport const defaultFileTypes = () => ({\n  name: \"\",\n  type: \"explicit\",\n  allowed: true,\n  checkUrlLength: true,\n  urlLength: 2048,\n  checkQueryStringLength: true,\n  queryStringLength: 2048,\n  checkPostDataLength: false,\n  postDataLength: 4096,\n  checkRequestLength: false,\n  requestLength: 8192,\n  responseCheck: false,\n});\n\nexport const defaultHeaders = () => ({\n  name: \"\",\n  type: \"explicit\",\n  decodeValueAsBase64: \"enabled\",\n  htmlNormalization: true,\n  mandatory: true,\n  allowRepeatedOccurrences: false,\n  checkSignatures: true,\n});\n\nexport const defaultParameters = () => ({\n  name: \"\",\n  type: \"wildcard\",\n  level: \"global\",\n  parameterLocation: \"any\",\n  valueType: \"auto-detect\",\n  allowEmptyValue: true,\n  checkMaxValueLength: false,\n  allowRepeatedParameterName: true,\n  sensitiveParameter: false,\n  attackSignaturesCheck: true,\n  checkMetachars: true,\n  metacharsOnParameterValueCheck: true,\n});\n","import * as React from \"react\";\nimport TextField, { TextFieldProps } from \"@material-ui/core/TextField\";\nimport { TableCell, TableCellProps } from \"@material-ui/core\";\nimport { IControlInfo } from \"../control-info.interface\";\n\nexport class TextEditFieldControl implements IControlInfo {\n  constructor(\n    private currentValue: string,\n    private onValueChange: (value: string) => void,\n    private cellProps?: TableCellProps,\n    private controlProps?: TextFieldProps\n  ) {}\n\n  createCell(children: JSX.Element, props: any): JSX.Element {\n    return (\n      <TableCell size=\"small\" {...this.cellProps} {...props}>\n        {children}\n      </TableCell>\n    );\n  }\n\n  createControl(props: any): JSX.Element {\n    return (\n      <TextField\n        fullWidth\n        value={this.currentValue ?? \"\"}\n        onChange={(e) => this.onValueChange(e.target.value)}\n        {...this.controlProps}\n        {...props}\n      />\n    );\n  }\n}\n","import { get as _get, set as _set } from \"lodash\";\nimport { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { FieldFactoryVisitor } from \"../interface/field-factory.visitor\";\n\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { defaultGeneralSettings } from \"../../../../model/policy-editor.defaults.model\";\nimport { TextEditFieldControl } from \"../../../../component/policy-editor/controls/field-control/text-edit.field-control\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\n\nexport class GeneralSettingsVisitor\n  extends BaseVisitor\n  implements FieldResolverVisitor, FieldFactoryVisitor<void>\n{\n  get hasAdvancedRows(): boolean {\n    return false;\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    return [];\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    return [\n      {\n        title: \"Policy Name\",\n        controlInfo: new TextEditFieldControl(\n          _get(this.json, \"policy.name\"),\n          (text) =>\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) =>\n                _set(currentJson, \"policy.name\", text)\n              )\n            )\n        ),\n      },\n      {\n        title: \"Application Language\",\n        controlInfo: new TextEditFieldControl(\n          _get(this.json, \"policy.applicationLanguage\"),\n          (text) =>\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) =>\n                _set(currentJson, \"policy.applicationLanguage\", text)\n              )\n            )\n        ),\n      },\n      {\n        title: \"Enforcement Mode\",\n        controlInfo: new TextEditFieldControl(\n          _get(this.json, \"policy.enforcementMode\"),\n          (text) =>\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) =>\n                _set(currentJson, \"policy.enforcementMode\", text)\n              )\n            )\n        ),\n      },\n      {\n        title: \"Template\",\n        controlInfo: new TextEditFieldControl(\n          _get(this.json, \"policy.template.name\"),\n          (text) =>\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) =>\n                _set(currentJson, \"policy.template.name\", text)\n              )\n            )\n        ),\n      },\n    ];\n  }\n\n  create() {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        _set(currentJson, \"policy\", defaultGeneralSettings);\n      })\n    );\n  }\n\n  remove(): void {}\n}\n","import * as React from \"react\";\n\nimport { useStyles } from \"../../../utils/styles.hook\";\nimport Box from \"@material-ui/core/Box\";\nimport { GridFieldValueControl } from \"../controls/grid.field-value.control\";\nimport { useVisitor } from \"../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { GeneralSettingsVisitor } from \"../../../store/policy-editor/visitor/imp/general-settings.visitor\";\n\nexport const GeneralSettingsPage: React.VoidFunctionComponent = () => {\n  const classes = useStyles();\n  const generalSettingsVisitor = useVisitor(GeneralSettingsVisitor);\n\n  return (\n    <Box className={classes.pageContent}>\n      <GridFieldValueControl rows={generalSettingsVisitor.getBasicRows()} />\n    </Box>\n  );\n};\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { TransitionProps } from \"@material-ui/core/transitions\";\nimport { createStyles, withStyles } from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport { useStyles } from \"../../../utils/styles.hook\";\nimport Grid from \"@material-ui/core/Grid\";\n\nexport type AdvancedSettingsDialogProps = {\n  open: boolean;\n  title: string;\n  handleClose: () => void;\n};\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst DialogAppBar = withStyles((theme) => {\n  return createStyles({\n    root: {\n      position: \"relative\",\n    },\n  });\n})(AppBar);\n\nconst DialogTitle = withStyles((theme) => {\n  return createStyles({\n    root: {\n      marginLeft: theme.spacing(2),\n      flex: 1,\n    },\n  });\n})(Typography);\n\nexport const AdvancedSettingsDialog: React.FunctionComponent<AdvancedSettingsDialogProps> =\n  ({ open, title, handleClose, children }) => {\n    const classes = useStyles();\n\n    return (\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        <DialogAppBar>\n          <Toolbar>\n            <DialogTitle variant=\"h6\">{title}</DialogTitle>\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\n              Save & Close\n            </Button>\n          </Toolbar>\n        </DialogAppBar>\n        <Grid container spacing={1}>\n          <Grid container item spacing={1} xs={12}>\n            <Grid container item spacing={1} xs={2} />\n            <Grid container item spacing={1} xs={8}>\n              <Box className={classes.pageContent}>{children}</Box>\n            </Grid>\n            <Grid container item spacing={1} xs={2} />\n          </Grid>\n        </Grid>\n      </Dialog>\n    );\n  };\n","import * as React from \"react\";\nimport { FieldResolverVisitor } from \"../../../store/policy-editor/visitor/interface/field-resolver.visitor\";\nimport { createStyles, TableContainer, withStyles } from \"@material-ui/core\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Table from \"@material-ui/core/Table\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport DeleteForeverRounded from \"@material-ui/icons/DeleteForeverRounded\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport { useEffect, useState } from \"react\";\n\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\nimport { AdvancedSettingsDialog } from \"../dialogs/advanced-settings.dialog\";\nimport { GridFieldValueControl } from \"./grid.field-value.control\";\nimport {\n  DragDropContext,\n  Draggable,\n  Droppable,\n  DropResult,\n  ResponderProvided,\n} from \"react-beautiful-dnd\";\nimport { DragIndicator } from \"@material-ui/icons\";\n\nconst StyledTableCell = withStyles((theme) =>\n  createStyles({\n    head: {\n      backgroundColor: theme.palette.background.default,\n      color: theme.palette.primary.contrastText,\n    },\n  })\n)(TableCell);\n\nconst StyledTableRow = withStyles((theme) =>\n  createStyles({\n    root: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  })\n)(TableRow);\n\nexport type GridTableValueProps = {\n  settingsName?: string;\n  titles: string[];\n  visitors: FieldResolverVisitor[];\n  dnd?: boolean;\n  onDragEnd?: (result: DropResult, provided: ResponderProvided) => void;\n};\n\nconst getItemStyle: (isDragging: boolean, draggableStyle: any) => any = (\n  isDragging,\n  draggableStyle\n) => ({\n  // styles we need to apply on draggables\n  ...draggableStyle,\n\n  ...(isDragging && {\n    background: \"rgb(235,235,235)\",\n  }),\n});\n\nconst DroppableComponent = (props: any) => {\n  return (\n    <Droppable droppableId={\"1\"} direction=\"vertical\">\n      {(provided) => {\n        return (\n          <TableBody\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n            {...props}\n          >\n            {props.children}\n            {provided.placeholder}\n          </TableBody>\n        );\n      }}\n    </Droppable>\n  );\n};\n\nexport const GridTableValueControl: React.FunctionComponent<GridTableValueProps> =\n  ({ settingsName, titles, visitors, dnd, onDragEnd }) => {\n    const [selected, setSelected] = useState([] as boolean[]);\n    const [advancedSettingsDialogOpen, setAdvancedSettingsDialogOpen] =\n      useState(false);\n    const [selectedItemIndex, setSelectedItemIndex] = useState(-1);\n\n    const onOpenAdvancedSettingsDialog = (index: number) => {\n      setSelectedItemIndex(index);\n      setAdvancedSettingsDialogOpen(true);\n    };\n    const onCloseAdvancedSettingsDialog = () =>\n      setAdvancedSettingsDialogOpen(false);\n\n    useEffect(() => {\n      setSelected(new Array<boolean>(visitors.length).fill(false));\n    }, [visitors.length]);\n\n    const allSelected = !selected.some((x) => !x);\n    const anySelected = selected.some((x) => x);\n\n    const onRemoveSelected: () => void = () => {\n      let removedOffset = 0;\n      for (let i = 0; i < selected.length; i++) {\n        if (selected[i]) {\n          visitors[i - removedOffset].remove();\n          removedOffset++;\n        }\n      }\n    };\n\n    const createAdvancedSettingsControls: (\n      itemIndex: number\n    ) => JSX.Element | undefined = (itemIndex) => {\n      if (itemIndex < 0) return undefined;\n\n      return (\n        <GridFieldValueControl rows={visitors[itemIndex].getAdvancedRows()} />\n      );\n    };\n\n    if (!visitors || visitors.length === 0) return <React.Fragment />;\n\n    return (\n      <React.Fragment>\n        <AdvancedSettingsDialog\n          title={settingsName ?? \"\"}\n          open={advancedSettingsDialogOpen}\n          handleClose={onCloseAdvancedSettingsDialog}\n        >\n          {advancedSettingsDialogOpen &&\n            createAdvancedSettingsControls(selectedItemIndex)}\n        </AdvancedSettingsDialog>\n        <DragDropContext\n          onDragEnd={(result: DropResult, provided: ResponderProvided) =>\n            onDragEnd && onDragEnd(result, provided)\n          }\n        >\n          <TableContainer component={Box}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  {dnd && <StyledTableCell />}\n                  <StyledTableCell />\n                  <StyledTableCell\n                    padding={\"checkbox\"}\n                    size=\"small\"\n                    align=\"center\"\n                  >\n                    <Checkbox\n                      checked={allSelected}\n                      size=\"small\"\n                      color=\"primary\"\n                      onChange={(e) => {\n                        setSelected([\n                          ...selected.map((x) => e.currentTarget.checked),\n                        ]);\n                      }}\n                    />\n                  </StyledTableCell>\n\n                  {titles.map((x, index) => (\n                    <StyledTableCell key={index}>\n                      <Typography color=\"primary\">{x}</Typography>\n                    </StyledTableCell>\n                  ))}\n                  <StyledTableCell align=\"center\">\n                    <Typography>\n                      <Button\n                        disabled={!anySelected}\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={() => onRemoveSelected()}\n                      >\n                        Remove\n                      </Button>\n                    </Typography>\n                  </StyledTableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody component={DroppableComponent}>\n                {visitors.map((v, vIndex) => {\n                  const row = (\n                    <React.Fragment key={vIndex}>\n                      {dnd && (\n                        <TableCell\n                          style={{\n                            width: \"24px\",\n                            paddingLeft: \"0px\",\n                            paddingRight: \"0px\",\n                          }}\n                        >\n                          <DragIndicator />\n                        </TableCell>\n                      )}\n                      <TableCell style={{ width: \"24px\" }}>\n                        {v.hasAdvancedRows ? (\n                          <IconButton\n                            size=\"small\"\n                            onClick={() => onOpenAdvancedSettingsDialog(vIndex)}\n                          >\n                            <OpenInNewIcon />\n                          </IconButton>\n                        ) : undefined}\n                      </TableCell>\n                      <StyledTableCell\n                        padding={\"checkbox\"}\n                        size=\"small\"\n                        align=\"center\"\n                      >\n                        <Checkbox\n                          size=\"small\"\n                          color=\"primary\"\n                          checked={selected[vIndex] ?? false}\n                          onChange={(e) => {\n                            selected[vIndex] = e.currentTarget.checked;\n                            setSelected([...selected]);\n                          }}\n                        />\n                      </StyledTableCell>\n                      {v.getBasicRows().map((item, index) =>\n                        item.controlInfo.createCell(\n                          item.controlInfo.createControl({\n                            key: `control_${index}`,\n                          }),\n                          { key: `cell_${index}` }\n                        )\n                      )}\n                      <TableCell size=\"small\" align=\"center\" padding=\"checkbox\">\n                        <IconButton\n                          size=\"small\"\n                          onClick={() => {\n                            v.remove();\n                          }}\n                        >\n                          <DeleteForeverRounded />\n                        </IconButton>\n                      </TableCell>\n                    </React.Fragment>\n                  );\n\n                  return (\n                    <Draggable\n                      key={vIndex}\n                      draggableId={`${vIndex}`}\n                      index={vIndex}\n                    >\n                      {(provided, snapshot) => (\n                        <StyledTableRow\n                          key={vIndex}\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          style={getItemStyle(\n                            snapshot.isDragging,\n                            provided.draggableProps.style\n                          )}\n                        >\n                          {row}\n                        </StyledTableRow>\n                      )}\n                    </Draggable>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </DragDropContext>\n      </React.Fragment>\n    );\n  };\n","import { get as _get, set as _set } from \"lodash\";\nimport { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldFactoryVisitor } from \"../interface/field-factory.visitor\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { defaultBlockingSettings } from \"../../../../model/policy-editor.defaults.model\";\n\nexport type BlockingSettingsFieldCreateProps = {\n  name: string;\n};\n\nexport class BlockingSettingsFieldFactory\n  extends BaseVisitor\n  implements FieldFactoryVisitor<BlockingSettingsFieldCreateProps>\n{\n  create(props: BlockingSettingsFieldCreateProps): void {\n    const path = \"policy.blocking-settings.violations\";\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        let violations = _get(currentJson, path);\n        if (!violations) {\n          _set(currentJson, path, [] as any);\n          violations = _get(currentJson, path);\n        }\n\n        violations.push(defaultBlockingSettings(props.name));\n      })\n    );\n  }\n}\n","import { FieldResolverVisitor } from \"../../interface/field-resolver.visitor\";\nimport { BaseVisitor } from \"../../interface/base.visitor\";\n\nexport abstract class BaseFieldResolverVisitorFactory extends BaseVisitor {\n  abstract getResolvers(): {\n    titles: string[];\n    visitors: FieldResolverVisitor[];\n  };\n}\n","import * as React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { TableCell } from \"@material-ui/core\";\nimport { IControlInfo } from \"../control-info.interface\";\n\nexport class LabelFieldControl implements IControlInfo {\n  constructor(private currentValue: string) {}\n\n  createCell(children: JSX.Element, props: any): JSX.Element {\n    return (\n      <TableCell size=\"small\" {...props}>\n        {children}\n      </TableCell>\n    );\n  }\n\n  createControl(props: any): JSX.Element {\n    return (\n      <Typography {...props} variant={\"caption\"}>\n        {this.currentValue}\n      </Typography>\n    );\n  }\n}\n","import * as React from \"react\";\n\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { TableCell } from \"@material-ui/core\";\nimport { IControlInfo } from \"../control-info.interface\";\n\nexport class CheckboxFieldControl implements IControlInfo {\n  constructor(\n    private currentValue: boolean,\n    private onValueChange: (value: boolean) => void\n  ) {}\n\n  createCell(children: JSX.Element, props: any): JSX.Element {\n    return (\n      <TableCell size=\"small\" padding=\"checkbox\" align=\"center\" {...props}>\n        {children}\n      </TableCell>\n    );\n  }\n\n  createControl(props: any): JSX.Element {\n    return (\n      <Checkbox\n        size=\"small\"\n        checked={this.currentValue}\n        color=\"primary\"\n        onChange={(e) => this.onValueChange(e.target.checked)}\n        {...props}\n      />\n    );\n  }\n}\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\n\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { set as _set } from \"lodash\";\nimport { Policy } from \"f5-waf-policy\";\nimport { LabelFieldControl } from \"../../../../component/policy-editor/controls/field-control/label.field-control\";\nimport { CheckboxFieldControl } from \"../../../../component/policy-editor/controls/field-control/checkbox.field-control\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\n\nexport class BlockingSettingsFieldResolver\n  extends BaseVisitor\n  implements FieldResolverVisitor\n{\n  constructor(\n    protected rowIndex: number,\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any\n  ) {\n    super(dispatch, json);\n  }\n\n  get hasAdvancedRows(): boolean {\n    return false;\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    return [];\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    const policy = new Policy();\n    const allViolations = policy.getAllViolations();\n\n    const resolveViolationTitle: (name: string) => string = (name: string) => {\n      const item = allViolations.find((x: any) => x.name === name);\n      if (!item) return name;\n\n      return item.title;\n    };\n\n    return [\n      {\n        title: \"\",\n        controlInfo: new LabelFieldControl(\n          resolveViolationTitle(this.json.name)\n        ),\n      },\n      {\n        controlInfo: new CheckboxFieldControl(this.json.alarm, (text) => {\n          this.dispatch(\n            policyEditorJsonVisit((currentJson) => {\n              _set(\n                currentJson,\n                `policy.blocking-settings.violations[${this.rowIndex}].alarm`,\n                text\n              );\n            })\n          );\n        }),\n        title: \"\",\n      },\n      {\n        title: \"\",\n        controlInfo: new CheckboxFieldControl(this.json.block, (text) => {\n          this.dispatch(\n            policyEditorJsonVisit((currentJson) => {\n              _set(\n                currentJson,\n                `policy.blocking-settings.violations[${this.rowIndex}].block`,\n                text\n              );\n            })\n          );\n        }),\n      },\n    ];\n  }\n\n  remove() {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        currentJson.policy[\"blocking-settings\"].violations.splice(\n          this.rowIndex,\n          1\n        );\n      })\n    );\n  }\n}\n","import { FieldResolverVisitor } from \"../../interface/field-resolver.visitor\";\nimport { BaseFieldResolverVisitorFactory } from \"../interface/base.field-resolver-visitor-factory\";\nimport { BlockingSettingsFieldResolver } from \"../../imp/blocking-settings-field.resolver\";\n\nimport { get as _get } from \"lodash\";\n\nexport class BlockingSettingsVisitorFactory extends BaseFieldResolverVisitorFactory {\n  getResolvers(): { titles: string[]; visitors: FieldResolverVisitor[] } {\n    const titles = [\"Violation\", \"Alarm\", \"Block\"];\n\n    if (_get(this.json, \"policy['blocking-settings'].violations\") === undefined)\n      return {\n        titles: [],\n        visitors: [] as FieldResolverVisitor[],\n      };\n\n    const visitors: FieldResolverVisitor[] = this.json.policy[\n      \"blocking-settings\"\n    ].violations.map((s: any, index: number) => {\n      return new BlockingSettingsFieldResolver(index, this.dispatch, s);\n    });\n\n    return {\n      titles,\n      visitors,\n    };\n  }\n}\n","import * as React from \"react\";\nimport { useStyles } from \"../../../utils/styles.hook\";\nimport Box from \"@material-ui/core/Box\";\nimport { GridTableValueControl } from \"../controls/grid.table-value.control\";\nimport { useVisitor } from \"../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { BlockingSettingsFieldFactory } from \"../../../store/policy-editor/visitor/imp/blocking-settings-field.factory\";\nimport { BlockingSettingsVisitorFactory } from \"../../../store/policy-editor/visitor/factory/imp/blocking-settings.visitor-factory\";\n\nimport { Policy } from \"f5-waf-policy\";\n\nimport { Menu, MenuItem } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { useState } from \"react\";\nimport { ExpandMore } from \"@material-ui/icons\";\n\nexport const BlockingSettingsPage: React.VoidFunctionComponent = () => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const policy = new Policy();\n  const allViolations = policy.getAllViolations();\n\n  const classes = useStyles();\n\n  const fieldFactoryVisitor = useVisitor(BlockingSettingsFieldFactory);\n  const blockingSettingsVisitorFactory = useVisitor(\n    BlockingSettingsVisitorFactory\n  );\n\n  const { titles, visitors } = blockingSettingsVisitorFactory.getResolvers();\n\n  return (\n    <Box className={classes.pageContent}>\n      <Box>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={(e) => setAnchorEl(e.currentTarget)}\n        >\n          Add Violation\n          <ExpandMore />\n        </Button>\n\n        <Menu\n          anchorEl={anchorEl}\n          onClose={() => {\n            setAnchorEl(null);\n          }}\n          open={Boolean(anchorEl)}\n        >\n          {allViolations.map((v: any, index: number) => (\n            <MenuItem\n              key={index}\n              value={v.name}\n              onClick={() => {\n                fieldFactoryVisitor.create({ name: v.name });\n                setAnchorEl(null);\n              }}\n            >\n              {v.title}\n            </MenuItem>\n          ))}\n        </Menu>\n      </Box>\n      <Box>\n        <GridTableValueControl titles={titles} visitors={visitors} />\n      </Box>\n    </Box>\n  );\n};\n","import { get as _get, set as _set } from \"lodash\";\n\nimport { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldFactoryVisitor } from \"../interface/field-factory.visitor\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { defaultMethods } from \"../../../../model/policy-editor.defaults.model\";\n\nexport class MethodsFieldFactory\n  extends BaseVisitor\n  implements FieldFactoryVisitor<void>\n{\n  create(): void {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        const path = \"policy.methods\";\n        let methods = _get(currentJson, path);\n        if (!methods) {\n          _set(currentJson, path, [] as any);\n          methods = _get(currentJson, path);\n        }\n\n        methods.push(defaultMethods());\n      })\n    );\n  }\n}\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { TextEditFieldControl } from \"../../../../component/policy-editor/controls/field-control/text-edit.field-control\";\n\nimport { set as _set } from \"lodash\";\n\nexport class MethodsFieldResolver\n  extends BaseVisitor\n  implements FieldResolverVisitor\n{\n  constructor(\n    protected rowIndex: number,\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any\n  ) {\n    super(dispatch, json);\n  }\n\n  get hasAdvancedRows(): boolean {\n    return false;\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    return [];\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    return [\n      {\n        title: \"\",\n        controlInfo: new TextEditFieldControl(\n          this.json.name,\n          (text) =>\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(\n                  currentJson,\n                  `policy.methods[${this.rowIndex}].name`,\n                  text\n                );\n              })\n            ),\n          {},\n          { variant: \"outlined\", size: \"small\" }\n        ),\n      },\n    ];\n  }\n\n  remove(): void {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        currentJson.policy.methods.splice(this.rowIndex, 1);\n      })\n    );\n  }\n}\n","import { BaseFieldResolverVisitorFactory } from \"../interface/base.field-resolver-visitor-factory\";\nimport { FieldResolverVisitor } from \"../../interface/field-resolver.visitor\";\n\nimport { get as _get } from \"lodash\";\nimport { MethodsFieldResolver } from \"../../imp/methods-field.resolver\";\n\nexport class MethodsVisitorFactory extends BaseFieldResolverVisitorFactory {\n  getResolvers(): { titles: string[]; visitors: FieldResolverVisitor[] } {\n    const titles = [\"Method Name\"];\n\n    if (_get(this.json, \"policy.methods\") === undefined) {\n      return {\n        titles: [],\n        visitors: [] as FieldResolverVisitor[],\n      };\n    }\n\n    const visitors: FieldResolverVisitor[] = this.json.policy.methods.map(\n      (m: any, index: number) => {\n        return new MethodsFieldResolver(index, this.dispatch, m);\n      }\n    );\n\n    return {\n      titles,\n      visitors,\n    };\n  }\n}\n","import * as React from \"react\";\nimport { Box, Button } from \"@material-ui/core\";\nimport { GridTableValueControl } from \"../controls/grid.table-value.control\";\nimport { useVisitor } from \"../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { MethodsFieldFactory } from \"../../../store/policy-editor/visitor/imp/methods-field.factory\";\nimport { MethodsVisitorFactory } from \"../../../store/policy-editor/visitor/factory/imp/methods.visitor-factory\";\nimport { useStyles } from \"../../../utils/styles.hook\";\n\nexport const MethodsPage: React.VoidFunctionComponent = () => {\n  const classes = useStyles();\n\n  const methodsFieldFactory = useVisitor(MethodsFieldFactory);\n  const methodsVisitorFactory = useVisitor(MethodsVisitorFactory);\n\n  const { titles, visitors } = methodsVisitorFactory.getResolvers();\n\n  return (\n    <Box className={classes.pageContent}>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => methodsFieldFactory.create()}\n      >\n        Add Method\n      </Button>\n      <Box>\n        <GridTableValueControl titles={titles} visitors={visitors} />\n      </Box>\n    </Box>\n  );\n};\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldFactoryVisitor } from \"../interface/field-factory.visitor\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { get as _get, set as _set } from \"lodash\";\nimport { defaultUrls } from \"../../../../model/policy-editor.defaults.model\";\n\nexport class UrlsFieldFactory\n  extends BaseVisitor\n  implements FieldFactoryVisitor<void>\n{\n  create(): void {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        const path = \"policy.urls\";\n        let urls = _get(currentJson, path);\n        if (!urls) {\n          _set(currentJson, path, [] as any);\n          urls = _get(currentJson, path);\n        }\n\n        urls.push(defaultUrls(urls.length));\n      })\n    );\n  }\n}\n","import * as React from \"react\";\n\nimport { TableCell } from \"@material-ui/core\";\nimport { IControlInfo } from \"../control-info.interface\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nexport class DropListFieldControl implements IControlInfo {\n  constructor(\n    private currentValue: string,\n    private onValueChange: (value: string) => void,\n    private items: string[]\n  ) {}\n\n  createCell(children: JSX.Element, props: any): JSX.Element {\n    return (\n      <TableCell size=\"small\" {...props}>\n        {children}\n      </TableCell>\n    );\n  }\n\n  createControl(props: any): JSX.Element {\n    return (\n      <Select\n        style={{\n          width: \"100%\",\n        }}\n        value={this.currentValue}\n        onChange={(e) => this.onValueChange(e.target.value as string)}\n        {...props}\n      >\n        {this.items.map((x, index) => (\n          <MenuItem key={index} value={x}>\n            {x}\n          </MenuItem>\n        ))}\n      </Select>\n    );\n  }\n}\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { TextEditFieldControl } from \"../../../../component/policy-editor/controls/field-control/text-edit.field-control\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { CheckboxFieldControl } from \"../../../../component/policy-editor/controls/field-control/checkbox.field-control\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\n\nimport { set as _set } from \"lodash\";\nimport { DropListFieldControl } from \"../../../../component/policy-editor/controls/field-control/drop-list.field-control\";\n\nexport class UrlsFieldResolver\n  extends BaseVisitor\n  implements FieldResolverVisitor\n{\n  constructor(\n    protected rowIndex: number,\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any\n  ) {\n    super(dispatch, json);\n  }\n\n  get hasAdvancedRows(): boolean {\n    return true;\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    return [\n      {\n        title: \"Name\",\n        controlInfo: new TextEditFieldControl(\n          this.json.name,\n          (text) => {\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(currentJson, `policy.urls[${this.rowIndex}].name`, text);\n              })\n            );\n          },\n          {},\n          { variant: \"outlined\", size: \"small\" }\n        ),\n      },\n      {\n        title: \"Method\",\n        controlInfo: new TextEditFieldControl(\n          this.json.method,\n          (text) => {\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(currentJson, `policy.urls[${this.rowIndex}].method`, text);\n              })\n            );\n          },\n          {},\n          { variant: \"outlined\", size: \"small\" }\n        ),\n      },\n      {\n        title: \"Protocol\",\n        controlInfo: new DropListFieldControl(\n          this.json.protocol,\n          (text) => {\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(\n                  currentJson,\n                  `policy.urls[${this.rowIndex}].protocol`,\n                  text\n                );\n              })\n            );\n          },\n          [\"http\", \"https\"]\n        ),\n      },\n      {\n        title: \"Type\",\n        controlInfo: new DropListFieldControl(\n          this.json.type,\n          (text) => {\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(currentJson, `policy.urls[${this.rowIndex}].type`, text);\n              })\n            );\n          },\n          [\"explicit\", \"wildcard\"]\n        ),\n      },\n      {\n        title: \"Check Signatures\",\n        controlInfo: new CheckboxFieldControl(\n          this.json.attackSignaturesCheck,\n          (value) => {\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(\n                  currentJson,\n                  `policy.urls[${this.rowIndex}].attackSignaturesCheck`,\n                  value\n                );\n              })\n            );\n          }\n        ),\n      },\n      {\n        title: \"Check Metachars\",\n        controlInfo: new CheckboxFieldControl(\n          this.json.metacharsOnUrlCheck,\n          (value) => {\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(\n                  currentJson,\n                  `policy.urls[${this.rowIndex}].metacharsOnUrlCheck`,\n                  value\n                );\n              })\n            );\n          }\n        ),\n      },\n    ];\n  }\n\n  remove(): void {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        currentJson.policy.urls.splice(this.rowIndex, 1);\n      })\n    );\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    return [\n      {\n        title: \"\",\n        controlInfo: new TextEditFieldControl(\n          this.json.name,\n          (text) => {\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(currentJson, `policy.urls[${this.rowIndex}].name`, text);\n              })\n            );\n          },\n          {},\n          { variant: \"outlined\", size: \"small\" }\n        ),\n      },\n      {\n        title: \"\",\n        controlInfo: new TextEditFieldControl(\n          this.json.method,\n          (text) => {\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(currentJson, `policy.urls[${this.rowIndex}].method`, text);\n              })\n            );\n          },\n          {},\n          { variant: \"outlined\", size: \"small\" }\n        ),\n      },\n      {\n        title: \"\",\n        controlInfo: new DropListFieldControl(\n          this.json.protocol,\n          (text) => {\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(\n                  currentJson,\n                  `policy.urls[${this.rowIndex}].protocol`,\n                  text\n                );\n              })\n            );\n          },\n          [\"http\", \"https\"]\n        ),\n      },\n    ];\n  }\n}\n","import { BaseFieldResolverVisitorFactory } from \"../interface/base.field-resolver-visitor-factory\";\nimport { get as _get } from \"lodash\";\nimport { FieldResolverVisitor } from \"../../interface/field-resolver.visitor\";\nimport { UrlsFieldResolver } from \"../../imp/urls-field.resolver\";\n\nexport class UrlsVisitorFactory extends BaseFieldResolverVisitorFactory {\n  getResolvers(): { titles: string[]; visitors: FieldResolverVisitor[] } {\n    const titles = [\"Name\", \"Method\", \"Protocol\"];\n\n    if (_get(this.json, \"policy.urls\") === undefined) {\n      return {\n        titles: [],\n        visitors: [] as FieldResolverVisitor[],\n      };\n    }\n\n    const visitors: FieldResolverVisitor[] = this.json.policy.urls.map(\n      (m: any, index: number) => {\n        return new UrlsFieldResolver(index, this.dispatch, m);\n      }\n    );\n\n    return {\n      titles,\n      visitors,\n    };\n  }\n}\n","import { Policy } from \"../../../../model/policy-schema/policy\";\nimport move from \"lodash-move\";\n\nexport class JsonUrlsServices {\n  constructor(private currentJson: Policy) {}\n\n  changeOrder(sourceIndex: number, destinationIndex: number): void {\n    if (!this.currentJson.urls || !this.currentJson?.urls[sourceIndex]) return;\n\n    this.currentJson.urls = move(\n      this.currentJson.urls,\n      sourceIndex,\n      destinationIndex\n    );\n\n    this.currentJson.urls?.forEach((x, index) => {\n      x.wildcardOrder = index;\n    });\n  }\n}\n","import React from \"react\";\nimport { Box, Button } from \"@material-ui/core\";\nimport { useStyles } from \"../../../utils/styles.hook\";\nimport { GridTableValueControl } from \"../controls/grid.table-value.control\";\nimport { useVisitor } from \"../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { UrlsFieldFactory } from \"../../../store/policy-editor/visitor/imp/urls-field.factory\";\nimport { UrlsVisitorFactory } from \"../../../store/policy-editor/visitor/factory/imp/urls.visitor-factory\";\nimport { usePolicyEditorDispatch } from \"../../../store/policy-editor/policy-editor.hooks\";\nimport { policyEditorJsonVisit } from \"../../../store/policy-editor/policy-editor.actions\";\nimport { JsonUrlsServices } from \"../../../store/policy-editor/visitor/services/json-urls.services\";\n\nexport const UrlsPage: React.VoidFunctionComponent = () => {\n  const classes = useStyles();\n\n  const urlsFieldFactory = useVisitor(UrlsFieldFactory);\n  const urlsVisitorFactory = useVisitor(UrlsVisitorFactory);\n\n  const { titles, visitors } = urlsVisitorFactory.getResolvers();\n\n  const dispatch = usePolicyEditorDispatch();\n\n  return (\n    <Box className={classes.pageContent}>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => urlsFieldFactory.create()}\n      >\n        Add URL\n      </Button>\n      <Box>\n        <GridTableValueControl\n          titles={titles}\n          visitors={visitors}\n          settingsName=\"URLs\"\n          dnd={true}\n          onDragEnd={(result) =>\n            dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                const urlServices = new JsonUrlsServices(currentJson.policy);\n                urlServices.changeOrder(\n                  result.source.index,\n                  result.destination?.index ?? 0\n                );\n              })\n            )\n          }\n        />\n      </Box>\n    </Box>\n  );\n};\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldFactoryVisitor } from \"../interface/field-factory.visitor\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { get as _get, set as _set } from \"lodash\";\nimport { defaultFileTypes } from \"../../../../model/policy-editor.defaults.model\";\n\nexport class FileTypesFieldFactory\n  extends BaseVisitor\n  implements FieldFactoryVisitor<void>\n{\n  create(): void {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        const path = \"policy.filetypes\";\n        let fileTypes = _get(currentJson, path);\n        if (!fileTypes) {\n          _set(currentJson, path, [] as any);\n          fileTypes = _get(currentJson, path);\n        }\n\n        fileTypes.push(defaultFileTypes());\n      })\n    );\n  }\n}\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { TextEditFieldControl } from \"../../../../component/policy-editor/controls/field-control/text-edit.field-control\";\nimport { set as _set } from \"lodash\";\nimport { DropListFieldControl } from \"../../../../component/policy-editor/controls/field-control/drop-list.field-control\";\nimport { CheckboxFieldControl } from \"../../../../component/policy-editor/controls/field-control/checkbox.field-control\";\n\nexport class FileTypesFieldResolver\n  extends BaseVisitor\n  implements FieldResolverVisitor\n{\n  constructor(\n    protected rowIndex: number,\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any\n  ) {\n    super(dispatch, json);\n  }\n\n  get hasAdvancedRows(): boolean {\n    return true;\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    return [\n      {\n        title: \"Filetype Name\",\n        controlInfo: new TextEditFieldControl(\n          this.json.name,\n          (text) =>\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(\n                  currentJson,\n                  `policy.filetypes[${this.rowIndex}].name`,\n                  text\n                );\n              })\n            ),\n          {},\n          { variant: \"outlined\", size: \"small\" }\n        ),\n      },\n      {\n        title: \"Type\",\n        controlInfo: new DropListFieldControl(\n          this.json.type,\n          (value) =>\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) =>\n                _set(\n                  currentJson,\n                  `policy.filetypes[${this.rowIndex}].type`,\n                  value\n                )\n              )\n            ),\n          [\"explicit\", \"wildcard\"]\n        ),\n      },\n      {\n        title: \"Allowed\",\n        controlInfo: new CheckboxFieldControl(this.json.allowed, (value) =>\n          this.dispatch(\n            policyEditorJsonVisit((currentJson) =>\n              _set(\n                currentJson,\n                `policy.filetypes[${this.rowIndex}].allowed`,\n                value\n              )\n            )\n          )\n        ),\n      },\n    ];\n  }\n\n  remove(): void {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        currentJson.policy.filetypes.splice(this.rowIndex, 1);\n      })\n    );\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    return [\n      {\n        title: \"Filetype Name\",\n        controlInfo: new TextEditFieldControl(\n          this.json.name,\n          (text) =>\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(\n                  currentJson,\n                  `policy.filetypes[${this.rowIndex}].name`,\n                  text\n                );\n              })\n            ),\n          {},\n          { variant: \"outlined\", size: \"small\" }\n        ),\n      },\n      {\n        title: \"Type\",\n        controlInfo: new DropListFieldControl(\n          this.json.type,\n          (value) =>\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) =>\n                _set(\n                  currentJson,\n                  `policy.filetypes[${this.rowIndex}].type`,\n                  value\n                )\n              )\n            ),\n          [\"explicit\", \"wildcard\"]\n        ),\n      },\n      {\n        title: \"Allowed\",\n        controlInfo: new CheckboxFieldControl(this.json.allowed, (value) =>\n          this.dispatch(\n            policyEditorJsonVisit((currentJson) =>\n              _set(\n                currentJson,\n                `policy.filetypes[${this.rowIndex}].allowed`,\n                value\n              )\n            )\n          )\n        ),\n      },\n      {\n        title: \"Check URL Length\",\n        controlInfo: new CheckboxFieldControl(\n          this.json.checkUrlLength,\n          (value) =>\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) =>\n                _set(\n                  currentJson,\n                  `policy.filetypes[${this.rowIndex}].checkUrlLength`,\n                  value\n                )\n              )\n            )\n        ),\n      },\n      {\n        title: \"URL Length\",\n        controlInfo: new TextEditFieldControl(\n          this.json.urlLength,\n          (value) =>\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) =>\n                _set(\n                  currentJson,\n                  `policy.filetypes[${this.rowIndex}].urlLength`,\n                  value\n                )\n              )\n            ),\n          {},\n          { variant: \"outlined\", size: \"small\" }\n        ),\n      },\n      {\n        title: \"Check QS Length\",\n        controlInfo: new CheckboxFieldControl(\n          this.json.checkQueryStringLength,\n          (value) =>\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) =>\n                _set(\n                  currentJson,\n                  `policy.filetypes[${this.rowIndex}].checkQueryStringLength`,\n                  value\n                )\n              )\n            )\n        ),\n      },\n      {\n        title: \"QS Length\",\n        controlInfo: new TextEditFieldControl(\n          this.json.queryStringLength,\n          (value) =>\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) =>\n                _set(\n                  currentJson,\n                  `policy.filetypes[${this.rowIndex}].queryStringLength`,\n                  value\n                )\n              )\n            ),\n          {},\n          { variant: \"outlined\", size: \"small\" }\n        ),\n      },\n      {\n        title: \"Check POST Data Length\",\n        controlInfo: new CheckboxFieldControl(\n          this.json.checkPostDataLength,\n          (value) =>\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) =>\n                _set(\n                  currentJson,\n                  `policy.filetypes[${this.rowIndex}].checkPostDataLength`,\n                  value\n                )\n              )\n            )\n        ),\n      },\n      {\n        title: \"POST Data Length\",\n        controlInfo: new TextEditFieldControl(\n          this.json.postDataLength,\n          (value) =>\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) =>\n                _set(\n                  currentJson,\n                  `policy.filetypes[${this.rowIndex}].postDataLength`,\n                  value\n                )\n              )\n            ),\n          {},\n          { variant: \"outlined\", size: \"small\" }\n        ),\n      },\n      {\n        title: \"Check Request Length\",\n        controlInfo: new CheckboxFieldControl(\n          this.json.checkRequestLength,\n          (value) =>\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) =>\n                _set(\n                  currentJson,\n                  `policy.filetypes[${this.rowIndex}].checkRequestLength`,\n                  value\n                )\n              )\n            )\n        ),\n      },\n      {\n        title: \"Request Length\",\n        controlInfo: new TextEditFieldControl(\n          this.json.requestLength,\n          (value) =>\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) =>\n                _set(\n                  currentJson,\n                  `policy.filetypes[${this.rowIndex}].requestLength`,\n                  value\n                )\n              )\n            ),\n          {},\n          { variant: \"outlined\", size: \"small\" }\n        ),\n      },\n      {\n        title: \"Check Response\",\n        controlInfo: new CheckboxFieldControl(\n          this.json.responseCheck,\n          (value) =>\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) =>\n                _set(\n                  currentJson,\n                  `policy.filetypes[${this.rowIndex}].responseCheck`,\n                  value\n                )\n              )\n            )\n        ),\n      },\n    ];\n  }\n}\n","import { BaseFieldResolverVisitorFactory } from \"../interface/base.field-resolver-visitor-factory\";\nimport { FieldResolverVisitor } from \"../../interface/field-resolver.visitor\";\nimport { FileTypesFieldResolver } from \"../../imp/file-types-field.resolver\";\n\nimport { get as _get } from \"lodash\";\n\nexport class FileTypesVisitorFactory extends BaseFieldResolverVisitorFactory {\n  getResolvers(): { titles: string[]; visitors: FieldResolverVisitor[] } {\n    const titles = [\"Filetype Name\", \"Type\", \"Allowed\"];\n\n    if (_get(this.json, \"policy.filetypes\") === undefined) {\n      return {\n        titles: [],\n        visitors: [] as FieldResolverVisitor[],\n      };\n    }\n\n    const visitors: FieldResolverVisitor[] = this.json.policy.filetypes.map(\n      (ft: any, index: number) => {\n        return new FileTypesFieldResolver(index, this.dispatch, ft);\n      }\n    );\n\n    return {\n      titles,\n      visitors,\n    };\n  }\n}\n","import React from \"react\";\nimport { useStyles } from \"../../../utils/styles.hook\";\nimport { useVisitor } from \"../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { Box, Button } from \"@material-ui/core\";\nimport { GridTableValueControl } from \"../controls/grid.table-value.control\";\nimport { FileTypesFieldFactory } from \"../../../store/policy-editor/visitor/imp/file-types-field.factory\";\nimport { FileTypesVisitorFactory } from \"../../../store/policy-editor/visitor/factory/imp/file-types.visitor-factory\";\n\nexport const FileTypesPage: React.VoidFunctionComponent = () => {\n  const classes = useStyles();\n\n  const filetypesFieldFactory = useVisitor(FileTypesFieldFactory);\n  const filetypesVisitorFactory = useVisitor(FileTypesVisitorFactory);\n\n  const { titles, visitors } = filetypesVisitorFactory.getResolvers();\n\n  return (\n    <Box className={classes.pageContent}>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => filetypesFieldFactory.create()}\n      >\n        Add Filetype\n      </Button>\n      <Box>\n        <GridTableValueControl\n          titles={titles}\n          visitors={visitors}\n          settingsName=\"Filetypes\"\n        />\n      </Box>\n    </Box>\n  );\n};\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldFactoryVisitor } from \"../interface/field-factory.visitor\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { get as _get, set as _set } from \"lodash\";\nimport { defaultHeaders } from \"../../../../model/policy-editor.defaults.model\";\n\nexport class HeadersFieldFactory\n  extends BaseVisitor\n  implements FieldFactoryVisitor<void>\n{\n  create(): void {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        const path = \"policy.headers\";\n        let fileTypes = _get(currentJson, path);\n        if (!fileTypes) {\n          _set(currentJson, path, [] as any);\n          fileTypes = _get(currentJson, path);\n        }\n\n        fileTypes.push(defaultHeaders());\n      })\n    );\n  }\n}\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { TextEditFieldControl } from \"../../../../component/policy-editor/controls/field-control/text-edit.field-control\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { set as _set } from \"lodash\";\nimport { DropListFieldControl } from \"../../../../component/policy-editor/controls/field-control/drop-list.field-control\";\nimport { CheckboxFieldControl } from \"../../../../component/policy-editor/controls/field-control/checkbox.field-control\";\n\nexport class HeadersFieldResolver\n  extends BaseVisitor\n  implements FieldResolverVisitor\n{\n  constructor(\n    protected rowIndex: number,\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any\n  ) {\n    super(dispatch, json);\n  }\n\n  get hasAdvancedRows(): boolean {\n    return true;\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    return [\n      {\n        title: \"Header Name\",\n        controlInfo: new TextEditFieldControl(\n          this.json.name,\n          (text) => {\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(\n                  currentJson,\n                  `policy.headers[${this.rowIndex}].name`,\n                  text\n                );\n              })\n            );\n          },\n          {},\n          { variant: \"outlined\", size: \"small\" }\n        ),\n      },\n      {\n        title: \"Type\",\n        controlInfo: new DropListFieldControl(\n          this.json.type,\n          (value) => {\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(\n                  currentJson,\n                  `policy.headers[${this.rowIndex}].type`,\n                  value\n                );\n              })\n            );\n          },\n          [\"explicit\", \"wildcard\"]\n        ),\n      },\n      {\n        title: \"Mandatory\",\n        controlInfo: new CheckboxFieldControl(this.json.mandatory, (value) => {\n          this.dispatch(\n            policyEditorJsonVisit((currentJson) => {\n              _set(\n                currentJson,\n                `policy.headers[${this.rowIndex}].mandatory`,\n                value\n              );\n            })\n          );\n        }),\n      },\n      {\n        title: \"Check Signatures\",\n        controlInfo: new CheckboxFieldControl(\n          this.json.checkSignatures,\n          (value) => {\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(\n                  currentJson,\n                  `policy.headers[${this.rowIndex}].checkSignatures`,\n                  value\n                );\n              })\n            );\n          }\n        ),\n      },\n      {\n        title: \"Normalize HTML\",\n        controlInfo: new CheckboxFieldControl(\n          this.json.htmlNormalization,\n          (value) => {\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(\n                  currentJson,\n                  `policy.headers[${this.rowIndex}].htmlNormalization`,\n                  value\n                );\n              })\n            );\n          }\n        ),\n      },\n      {\n        title: \"Decode Base64\",\n        controlInfo: new CheckboxFieldControl(\n          this.json.decodeValueAsBase64 === \"enabled\",\n          (value) => {\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(\n                  currentJson,\n                  `policy.headers[${this.rowIndex}].decodeValueAsBase64`,\n                  value ? \"enabled\" : \"disabled\"\n                );\n              })\n            );\n          }\n        ),\n      },\n      {\n        title: \"Allow Repeated\",\n        controlInfo: new CheckboxFieldControl(\n          this.json.allowRepeatedOccurrences,\n          (value) => {\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(\n                  currentJson,\n                  `policy.headers[${this.rowIndex}].allowRepeatedOccurrences`,\n                  value\n                );\n              })\n            );\n          }\n        ),\n      },\n    ];\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    return [\n      {\n        title: \"\",\n        controlInfo: new TextEditFieldControl(\n          this.json.name,\n          (text) => {\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(\n                  currentJson,\n                  `policy.headers[${this.rowIndex}].name`,\n                  text\n                );\n              })\n            );\n          },\n          {},\n          { variant: \"outlined\", size: \"small\" }\n        ),\n      },\n      {\n        title: \"\",\n        controlInfo: new DropListFieldControl(\n          this.json.type,\n          (value) => {\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(\n                  currentJson,\n                  `policy.headers[${this.rowIndex}].type`,\n                  value\n                );\n              })\n            );\n          },\n          [\"explicit\", \"wildcard\"]\n        ),\n      },\n    ];\n  }\n\n  remove(): void {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        currentJson.policy.headers.splice(this.rowIndex, 1);\n      })\n    );\n  }\n}\n","import { BaseFieldResolverVisitorFactory } from \"../interface/base.field-resolver-visitor-factory\";\nimport { get as _get } from \"lodash\";\nimport { FieldResolverVisitor } from \"../../interface/field-resolver.visitor\";\nimport { HeadersFieldResolver } from \"../../imp/headers-field.resolver\";\n\nexport class HeadersVisitorFactory extends BaseFieldResolverVisitorFactory {\n  getResolvers(): { titles: string[]; visitors: FieldResolverVisitor[] } {\n    const titles = [\"Header Name\", \"Type\"];\n\n    if (_get(this.json, \"policy.headers\") === undefined) {\n      return {\n        titles: [],\n        visitors: [] as FieldResolverVisitor[],\n      };\n    }\n\n    const visitors: FieldResolverVisitor[] = this.json.policy.headers.map(\n      (h: any, index: number) => {\n        return new HeadersFieldResolver(index, this.dispatch, h);\n      }\n    );\n\n    return {\n      titles,\n      visitors,\n    };\n  }\n}\n","import React from \"react\";\nimport { Box, Button } from \"@material-ui/core\";\nimport { useStyles } from \"../../../utils/styles.hook\";\nimport { GridTableValueControl } from \"../controls/grid.table-value.control\";\nimport { useVisitor } from \"../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { HeadersFieldFactory } from \"../../../store/policy-editor/visitor/imp/headers-field.factory\";\nimport { HeadersVisitorFactory } from \"../../../store/policy-editor/visitor/factory/imp/headers.visitor-factory\";\n\nexport const HeadersPage: React.VoidFunctionComponent = () => {\n  const classes = useStyles();\n\n  const headersFieldFactory = useVisitor(HeadersFieldFactory);\n  const headersVisitorFactory = useVisitor(HeadersVisitorFactory);\n\n  const { titles, visitors } = headersVisitorFactory.getResolvers();\n\n  return (\n    <Box className={classes.pageContent}>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => headersFieldFactory.create()}\n      >\n        Add Header\n      </Button>\n      <Box>\n        <GridTableValueControl\n          titles={titles}\n          visitors={visitors}\n          settingsName=\"URLs\"\n        />\n      </Box>\n    </Box>\n  );\n};\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldFactoryVisitor } from \"../interface/field-factory.visitor\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { get as _get, set as _set } from \"lodash\";\nimport { defaultParameters } from \"../../../../model/policy-editor.defaults.model\";\n\nexport class ParametersFieldFactory\n  extends BaseVisitor\n  implements FieldFactoryVisitor<void>\n{\n  create(): void {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        const path = \"policy.parameters\";\n        let fileTypes = _get(currentJson, path);\n        if (!fileTypes) {\n          _set(currentJson, path, [] as any);\n          fileTypes = _get(currentJson, path);\n        }\n\n        fileTypes.push(defaultParameters());\n      })\n    );\n  }\n}\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { TextEditFieldControl } from \"../../../../component/policy-editor/controls/field-control/text-edit.field-control\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { set as _set } from \"lodash\";\nimport { DropListFieldControl } from \"../../../../component/policy-editor/controls/field-control/drop-list.field-control\";\nimport { CheckboxFieldControl } from \"../../../../component/policy-editor/controls/field-control/checkbox.field-control\";\n\nexport class ParametersFieldResolver\n  extends BaseVisitor\n  implements FieldResolverVisitor\n{\n  constructor(\n    protected rowIndex: number,\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any\n  ) {\n    super(dispatch, json);\n  }\n\n  get hasAdvancedRows(): boolean {\n    return true;\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    return [\n      {\n        title: \"Name\",\n        controlInfo: new TextEditFieldControl(\n          this.json.name,\n          (text) => {\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(\n                  currentJson,\n                  `policy.parameters[${this.rowIndex}].name`,\n                  text\n                );\n              })\n            );\n          },\n          {},\n          { variant: \"outlined\", size: \"small\" }\n        ),\n      },\n      {\n        title: \"Type\",\n        controlInfo: new DropListFieldControl(\n          this.json.type,\n          (value) => {\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(\n                  currentJson,\n                  `policy.parameters[${this.rowIndex}].type`,\n                  value\n                );\n              })\n            );\n          },\n          [\"explicit\", \"wildcard\"]\n        ),\n      },\n      {\n        title: \"Level\",\n        controlInfo: new DropListFieldControl(\n          this.json.level,\n          (value) => {\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(\n                  currentJson,\n                  `policy.parameters[${this.rowIndex}].level`,\n                  value\n                );\n              })\n            );\n          },\n          [\"global\"]\n        ),\n      },\n      {\n        title: \"Location\",\n        controlInfo: new DropListFieldControl(\n          this.json.location,\n          (value) => {\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(\n                  currentJson,\n                  `policy.parameters[${this.rowIndex}].location`,\n                  value\n                );\n              })\n            );\n          },\n          [\"any\"]\n        ),\n      },\n      {\n        title: \"Value type\",\n        controlInfo: new DropListFieldControl(\n          this.json.valueType,\n          (value) => {\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(\n                  currentJson,\n                  `policy.parameters[${this.rowIndex}].valueType`,\n                  value\n                );\n              })\n            );\n          },\n          [\"auto-detect\"]\n        ),\n      },\n      {\n        title: \"Allow Empty Value\",\n        controlInfo: new CheckboxFieldControl(\n          this.json.allowEmptyValue,\n          (value) => {\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(\n                  currentJson,\n                  `policy.parameters[${this.rowIndex}].allowEmptyValue`,\n                  value\n                );\n              })\n            );\n          }\n        ),\n      },\n      {\n        title: \"Check Max Value Length\",\n        controlInfo: new CheckboxFieldControl(\n          this.json.checkMaxValueLength,\n          (value) => {\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(\n                  currentJson,\n                  `policy.parameters[${this.rowIndex}].checkMaxValueLength`,\n                  value\n                );\n              })\n            );\n          }\n        ),\n      },\n      {\n        title: \"Allow Repeated\",\n        controlInfo: new CheckboxFieldControl(\n          this.json.allowRepeatedParameterName,\n          (value) => {\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(\n                  currentJson,\n                  `policy.parameters[${this.rowIndex}].allowRepeatedParameterName`,\n                  value\n                );\n              })\n            );\n          }\n        ),\n      },\n      {\n        title: \"Sensitive\",\n        controlInfo: new CheckboxFieldControl(\n          this.json.sensitiveParameter,\n          (value) => {\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(\n                  currentJson,\n                  `policy.parameters[${this.rowIndex}].sensitiveParameter`,\n                  value\n                );\n              })\n            );\n          }\n        ),\n      },\n\n      {\n        title: \"Check Attack Signatures\",\n        controlInfo: new CheckboxFieldControl(\n          this.json.attackSignaturesCheck,\n          (value) => {\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(\n                  currentJson,\n                  `policy.parameters[${this.rowIndex}].attackSignaturesCheck`,\n                  value\n                );\n              })\n            );\n          }\n        ),\n      },\n      {\n        title: \"Check Metachars\",\n        controlInfo: new CheckboxFieldControl(\n          this.json.checkMetachars,\n          (value) => {\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(\n                  currentJson,\n                  `policy.parameters[${this.rowIndex}].checkMetachars`,\n                  value\n                );\n              })\n            );\n          }\n        ),\n      },\n      {\n        title: \"Check Metachars on Value\",\n        controlInfo: new CheckboxFieldControl(\n          this.json.metacharsOnParameterValueCheck,\n          (value) => {\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(\n                  currentJson,\n                  `policy.parameters[${this.rowIndex}].metacharsOnParameterValueCheck`,\n                  value\n                );\n              })\n            );\n          }\n        ),\n      },\n    ];\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    return [\n      {\n        title: \"\",\n        controlInfo: new TextEditFieldControl(\n          this.json.name,\n          (text) => {\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(\n                  currentJson,\n                  `policy.parameters[${this.rowIndex}].name`,\n                  text\n                );\n              })\n            );\n          },\n          {},\n          { variant: \"outlined\", size: \"small\" }\n        ),\n      },\n      {\n        title: \"\",\n        controlInfo: new DropListFieldControl(\n          this.json.type,\n          (value) => {\n            this.dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                _set(\n                  currentJson,\n                  `policy.parameters[${this.rowIndex}].type`,\n                  value\n                );\n              })\n            );\n          },\n          [\"explicit\", \"wildcard\"]\n        ),\n      },\n    ];\n  }\n\n  remove(): void {}\n}\n","import { BaseFieldResolverVisitorFactory } from \"../interface/base.field-resolver-visitor-factory\";\nimport { get as _get } from \"lodash\";\nimport { FieldResolverVisitor } from \"../../interface/field-resolver.visitor\";\nimport { ParametersFieldResolver } from \"../../imp/parameters-field.resolver\";\n\nexport class ParametersVisitorFactory extends BaseFieldResolverVisitorFactory {\n  getResolvers(): { titles: string[]; visitors: FieldResolverVisitor[] } {\n    const titles = [\"Name\", \"Type\"];\n\n    if (_get(this.json, \"policy.parameters\") === undefined) {\n      return {\n        titles: [],\n        visitors: [] as FieldResolverVisitor[],\n      };\n    }\n\n    const visitors: FieldResolverVisitor[] = this.json.policy.parameters.map(\n      (m: any, index: number) => {\n        return new ParametersFieldResolver(index, this.dispatch, m);\n      }\n    );\n\n    return {\n      titles,\n      visitors,\n    };\n  }\n}\n","import React from \"react\";\nimport { Box, Button } from \"@material-ui/core\";\nimport { useStyles } from \"../../../utils/styles.hook\";\nimport { GridTableValueControl } from \"../controls/grid.table-value.control\";\nimport { useVisitor } from \"../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { ParametersFieldFactory } from \"../../../store/policy-editor/visitor/imp/parameters-field.factory\";\nimport { ParametersVisitorFactory } from \"../../../store/policy-editor/visitor/factory/imp/parameters.visitor-factory\";\n\nexport const ParametersPage: React.VoidFunctionComponent = () => {\n  const classes = useStyles();\n\n  const parametersFieldFactory = useVisitor(ParametersFieldFactory);\n  const parametersVisitorFactory = useVisitor(ParametersVisitorFactory);\n\n  const { titles, visitors } = parametersVisitorFactory.getResolvers();\n\n  return (\n    <Box className={classes.pageContent}>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => parametersFieldFactory.create()}\n      >\n        Add Parameter\n      </Button>\n      <Box>\n        <GridTableValueControl\n          titles={titles}\n          visitors={visitors}\n          settingsName=\"URLs\"\n        />\n      </Box>\n    </Box>\n  );\n};\n","import * as React from \"react\";\n\nimport { PolicyEditorPageEnum } from \"../../../store/policy-editor/policy-editor.types\";\nimport { GeneralSettingsPage } from \"../pages/general-settings.page\";\nimport { BlockingSettingsPage } from \"../pages/blocking-settings.page\";\nimport { MethodsPage } from \"../pages/methods.page\";\nimport { UrlsPage } from \"../pages/urls.page\";\nimport { FileTypesPage } from \"../pages/file-types.page\";\nimport { HeadersPage } from \"../pages/headers.page\";\nimport { ParametersPage } from \"../pages/parameters.page\";\n\nexport class PolicyEditorPageFactory {\n  constructor(\n    private pages: { [key: number]: JSX.Element } = {\n      [PolicyEditorPageEnum.GeneralSettings]: <GeneralSettingsPage />,\n      [PolicyEditorPageEnum.BlockingSettings]: <BlockingSettingsPage />,\n      [PolicyEditorPageEnum.Methods]: <MethodsPage />,\n      [PolicyEditorPageEnum.URLs]: <UrlsPage />,\n      [PolicyEditorPageEnum.Filetypes]: <FileTypesPage />,\n      [PolicyEditorPageEnum.Headers]: <HeadersPage />,\n      [PolicyEditorPageEnum.Parameters]: <ParametersPage />,\n    }\n  ) {}\n\n  createPage(page: PolicyEditorPageEnum): JSX.Element {\n    return this.pages[page];\n  }\n}\n","import * as React from \"react\";\nimport Editor from \"react-simple-code-editor\";\nimport { useEffect, useState } from \"react\";\nimport { languages, highlight } from \"prismjs\";\n\nimport \"prismjs/themes/prism-solarizedlight.css\";\nimport \"prismjs/components/prism-json\";\n\nexport type CurrentPolicyProps = {\n  jsonText: string;\n  onTextChange?: (text: string) => void;\n};\n\nexport const CurrentPolicyControl: React.FunctionComponent<CurrentPolicyProps> =\n  ({ jsonText, onTextChange }) => {\n    const [code, setCode] = useState(jsonText);\n\n    useEffect(() => {\n      setCode(jsonText);\n    }, [jsonText]);\n\n    return (\n      <Editor\n        value={code}\n        onValueChange={(text) => {\n          if (text !== code && onTextChange) {\n            // check that this is called not because\n            // the props changed, but by the user event\n            // to avoid loops\n            onTextChange(text);\n          }\n          setCode(text);\n        }}\n        highlight={(code) =>\n          code && code.length > 0 && highlight(code, languages.json, \"json\")\n        }\n        padding={10}\n        className=\"container__editor\"\n        style={{\n          fontFamily: \"monospace\",\n          fontSize: 12,\n          position: \"relative\",\n          overflow: \"scroll\",\n        }}\n      />\n    );\n  };\n","import * as React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport {\n  EditorTabControl,\n  EditorTabsControl,\n} from \"./controls/policy-editor.tabs.control\";\nimport { TabsTree } from \"./model/policy-editor.tabs.model\";\nimport {\n  usePolicyEditorDispatch,\n  usePolicyEditorState,\n} from \"../../store/policy-editor/policy-editor.hooks\";\nimport {\n  policyEditorJsonTextSet,\n  policyEditorPageSet,\n} from \"../../store/policy-editor/policy-editor.actions\";\nimport { PolicyEditorPageFactory } from \"./controls/policy-editor.page.factory\";\nimport { CurrentPolicyControl } from \"./controls/curren-policy.control\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { createStyles, withStyles } from \"@material-ui/core\";\n\nconst JsonEditorContainer = withStyles((theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n  })\n)(Paper);\n\nconst CurrentPageContainer = withStyles((theme) =>\n  createStyles({\n    root: {\n      margin: theme.spacing(3),\n      position: \"relative\",\n    },\n  })\n)(Box);\n\nconst ParseErrorOverlay = withStyles((theme) =>\n  createStyles({\n    root: {\n      position: \"absolute\",\n      backgroundColor: theme.palette.error.main,\n      opacity: 0.5,\n      top: \"0px\",\n      left: \"0px\",\n      width: \"100%\",\n      height: \"100%\",\n      borderRadius: theme.shape.borderRadius,\n      zIndex: 2,\n    },\n  })\n)(Box);\n\nconst EditorPage = withStyles((theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n  })\n)(Box);\n\nexport const PolicyEditorComponent: React.VoidFunctionComponent = () => {\n  const { currentPage, strCurrentPolicy, jsonParseError, currentTab } =\n    usePolicyEditorState();\n\n  const dispatch = usePolicyEditorDispatch();\n  const pageFactory = new PolicyEditorPageFactory();\n\n  return (\n    <React.Fragment>\n      <EditorTabsControl\n        variant=\"scrollable\"\n        scrollButtons=\"auto\"\n        value={currentTab}\n        onChange={(_, tab) => {\n          dispatch(policyEditorPageSet(tab, TabsTree[tab].id));\n        }}\n      >\n        {TabsTree.map(({ label, id, disabled }) => (\n          <EditorTabControl label={label} key={id} disabled={disabled} />\n        ))}\n      </EditorTabsControl>\n\n      <Grid container spacing={1}>\n        <Grid container item spacing={1} xs={12}>\n          <Grid container item spacing={1} xs={2} />\n          <Grid container item spacing={1} xs={8}>\n            <EditorPage>\n              <CurrentPageContainer>\n                {pageFactory.createPage(currentPage)}\n                {jsonParseError && <ParseErrorOverlay />}\n              </CurrentPageContainer>\n              <JsonEditorContainer>\n                <CurrentPolicyControl\n                  jsonText={strCurrentPolicy}\n                  onTextChange={(text) =>\n                    dispatch(policyEditorJsonTextSet(text))\n                  }\n                />\n              </JsonEditorContainer>\n            </EditorPage>\n          </Grid>\n          <Grid container item spacing={1} xs={2} />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n","import * as React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nexport const PolicyWizardComponent: React.VoidFunctionComponent = () => {\n  return <Typography>Policy Wizard is under development</Typography>;\n};\n","import { Policy } from \"../../../../model/policy-schema/policy\";\n\nexport class PolicyEditorPreprocessorServices {\n  constructor(private body: string) {}\n\n  preprocess(): string {\n    try {\n      const parsed = JSON.parse(this.body);\n      const policy = parsed.policy as Policy;\n\n      if (policy?.urls) {\n        policy.urls = policy.urls.sort(\n          (l, r) => (l.wildcardOrder ?? 0) - (r?.wildcardOrder ?? 0)\n        );\n      }\n\n      return JSON.stringify({ policy });\n    } catch (e) {\n      return this.body;\n    }\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport { PolicyEditorDashboardComponent } from \"./component/dashboard/policy-editor.dashboard.component\";\nimport { useDashboardState } from \"./store/dashboard/dashboard.hooks\";\nimport { DashboardModuleEnum } from \"./store/dashboard/dashboard.types\";\nimport { ApplicationPresetComponent } from \"./component/application-preset/application-preset.component\";\nimport { PolicyEditorComponent } from \"./component/policy-editor/policy-editor.component\";\nimport { PolicyWizardComponent } from \"./component/policy-wizard/policy-wizard.component\";\nimport {\n  BrowserRouter,\n  Route,\n  RouteComponentProps,\n  Switch,\n} from \"react-router-dom\";\n\nimport queryString from \"query-string\";\nimport {\n  usePolicyEditorDispatch,\n  usePolicyEditorState,\n} from \"./store/policy-editor/policy-editor.hooks\";\nimport { Box } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  policyEditorJsonSrcSet,\n  policyEditorJsonTextSet,\n} from \"./store/policy-editor/policy-editor.actions\";\nimport { defaultGeneralSettings } from \"./model/policy-editor.defaults.model\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\nimport { PolicyEditorPreprocessorServices } from \"./store/policy-editor/visitor/services/policy-editor-preprocessor.services\";\n\ntype PolicyEditorParams = {};\n\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Dashboard: React.FunctionComponent<\n  RouteComponentProps<PolicyEditorParams>\n> = ({ match }) => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const { currentModule } = useDashboardState();\n  const { strCurrentPolicy, policySrcUrl } = usePolicyEditorState();\n  const dispatch = usePolicyEditorDispatch();\n  const qs = queryString.parse(window.location.search);\n\n  const handleErrorClose = (\n    event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string\n  ) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setErrorMessage(\"\");\n  };\n\n  useEffect(() => {\n    switch (true) {\n      case qs.ref && strCurrentPolicy === \"\":\n      case qs.ref && qs.ref !== \"\" && policySrcUrl !== qs.ref: {\n        fetch(decodeURI(qs.ref as string))\n          .then(async (x) => {\n            const body = await x.text();\n\n            const policyEditorPreprocessor =\n              new PolicyEditorPreprocessorServices(body);\n\n            dispatch(\n              policyEditorJsonSrcSet(\n                qs.ref as string,\n                policyEditorPreprocessor.preprocess()\n              )\n            );\n          })\n          .catch((e) => {\n            setErrorMessage(\n              `Cannot get the policy by the link. The default policy will be used`\n            );\n            dispatch(\n              policyEditorJsonSrcSet(\n                qs.ref as string,\n                JSON.stringify(defaultGeneralSettings(), null, 2)\n              )\n            );\n          });\n        break;\n      }\n      case !qs.ref && strCurrentPolicy === \"\": {\n        dispatch(\n          policyEditorJsonTextSet(\n            JSON.stringify(defaultGeneralSettings(), null, 2)\n          )\n        );\n        break;\n      }\n    }\n  }, [dispatch, policySrcUrl, qs.ref, strCurrentPolicy]);\n\n  if (\n    (qs.ref && strCurrentPolicy === \"\") ||\n    (qs.ref && qs.ref !== \"\" && policySrcUrl !== qs.ref)\n  ) {\n    return (\n      <Box>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  const uiFactory: { [key: number]: JSX.Element } = {\n    [DashboardModuleEnum.ApplicationPreset]: <ApplicationPresetComponent />,\n    [DashboardModuleEnum.PolicyEditor]: <PolicyEditorComponent />,\n    [DashboardModuleEnum.PolicyWizard]: <PolicyWizardComponent />,\n  };\n\n  return (\n    <PolicyEditorDashboardComponent>\n      {uiFactory[currentModule]}\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n        open={errorMessage !== \"\"}\n        onClose={handleErrorClose}\n        message={errorMessage}\n      >\n        <Alert onClose={handleErrorClose} severity=\"error\">\n          {errorMessage}\n        </Alert>\n      </Snackbar>\n    </PolicyEditorDashboardComponent>\n  );\n};\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" component={Dashboard} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { Action } from \"redux\";\nimport produce, { Draft } from \"immer\";\n\nexport type ReducerHandler<\n  PolicyEditorAction extends Action,\n  PolicyEditorState\n> = (\n  currentState: Draft<PolicyEditorState>,\n  action: PolicyEditorAction\n) => Draft<PolicyEditorState>;\n\nexport abstract class ReducerBase<\n  PolicyEditorAction extends Action,\n  PolicyEditorState\n> {\n  protected constructor(\n    private _currentState: PolicyEditorState,\n    private _reducerFactory: {\n      [key: string]: ReducerHandler<PolicyEditorAction, PolicyEditorState>;\n    }\n  ) {}\n\n  process(action: PolicyEditorAction): PolicyEditorState {\n    const processor = this._reducerFactory[action.type];\n    if (!processor) return this._currentState;\n\n    return produce<PolicyEditorState>(this._currentState, (draft) =>\n      processor(draft, action)\n    );\n  }\n}\n","import {\n  DashboardAction,\n  DashboardReducerHandler,\n  DashboardState,\n} from \"../dashboard.types\";\nimport { Draft } from \"immer\";\n\nexport const dashboardModuleSetHandler: DashboardReducerHandler = (\n  currentState: Draft<DashboardState>,\n  action: DashboardAction\n) => {\n  if (action.currentModule === undefined) return currentState;\n\n  currentState.currentModule = action.currentModule;\n\n  return currentState;\n};\n","import {\n  DashboardAction,\n  DashboardModuleEnum,\n  DashboardState,\n} from \"./dashboard.types\";\nimport { ReducerBase } from \"../reducer.base\";\nimport { DASHBOARD_MODULE_SET } from \"../action-types\";\nimport { dashboardModuleSetHandler } from \"./handler/dashboard-module-set.handler\";\n\nexport function dashboardStateInit(): DashboardState {\n  return {\n    currentModule: DashboardModuleEnum.PolicyEditor,\n  };\n}\n\nclass DashboardReducerHandlerFactory extends ReducerBase<\n  DashboardAction,\n  DashboardState\n> {\n  constructor(state: DashboardState) {\n    super(state, {\n      [DASHBOARD_MODULE_SET]: dashboardModuleSetHandler,\n    });\n  }\n}\n\nexport const DashboardReducer = (\n  state: DashboardState = dashboardStateInit(),\n  action: DashboardAction\n): DashboardState => {\n  const dashboardReducerHandlerFactory = new DashboardReducerHandlerFactory(\n    state\n  );\n  return dashboardReducerHandlerFactory.process(action);\n};\n","import {\n  PolicyEditorAction,\n  PolicyEditorReducerHandler,\n  PolicyEditorState,\n} from \"../policy-editor.types\";\nimport { Draft } from \"immer\";\n\nexport const policyEditorPageSetHandler: PolicyEditorReducerHandler = (\n  currentState: Draft<PolicyEditorState>,\n  action: PolicyEditorAction\n) => {\n  if (action.currentPage === undefined || action.currentTab === undefined)\n    return currentState;\n\n  currentState.currentTab = action.currentTab;\n  currentState.currentPage = action.currentPage;\n\n  return currentState;\n};\n","import {\n  PolicyEditorAction,\n  PolicyEditorReducerHandler,\n  PolicyEditorState,\n} from \"../policy-editor.types\";\nimport { Draft } from \"immer\";\n\nexport const policyEditorJsonTextSetHandler: PolicyEditorReducerHandler = (\n  currentState: Draft<PolicyEditorState>,\n  action: PolicyEditorAction\n) => {\n  if (action.strPolicy === undefined || action.strPolicy === \"\")\n    return currentState;\n\n  currentState.strCurrentPolicy = action.strPolicy;\n\n  try {\n    currentState.jsonCurrentPolicy = JSON.parse(action.strPolicy);\n    currentState.jsonParseError = false;\n  } catch (e) {\n    currentState.jsonParseError = true;\n  }\n\n  return currentState;\n};\n","import {\n  PolicyEditorAction,\n  PolicyEditorReducerHandler,\n  PolicyEditorState,\n} from \"../policy-editor.types\";\nimport { Draft } from \"immer\";\n\nexport const policyEditorJsonVisitHandler: PolicyEditorReducerHandler = (\n  currentState: Draft<PolicyEditorState>,\n  action: PolicyEditorAction\n) => {\n  if (action.visitor === undefined) return currentState;\n\n  action.visitor(currentState.jsonCurrentPolicy);\n\n  currentState.strCurrentPolicy = JSON.stringify(\n    currentState.jsonCurrentPolicy,\n    null,\n    2\n  );\n\n  return currentState;\n};\n","import { PolicyEditorReducerHandler } from \"../policy-editor.types\";\n\nexport const policyEditorJsonSrcSetHandler: PolicyEditorReducerHandler = (\n  currentState,\n  action\n) => {\n  if (action.strPolicy === undefined || action.policySrcUrl === undefined)\n    return currentState;\n\n  currentState.strCurrentPolicy = action.strPolicy;\n  currentState.policySrcUrl = action.policySrcUrl;\n\n  try {\n    currentState.jsonCurrentPolicy = JSON.parse(action.strPolicy);\n    currentState.jsonParseError = false;\n  } catch (e) {\n    currentState.jsonParseError = true;\n  }\n\n  return currentState;\n};\n","import {\n  PolicyEditorAction,\n  PolicyEditorPageEnum,\n  PolicyEditorState,\n} from \"./policy-editor.types\";\nimport { ReducerBase } from \"../reducer.base\";\nimport {\n  POLICY_EDITOR_JSON_SRC_SET,\n  POLICY_EDITOR_JSON_TEXT_SET,\n  POLICY_EDITOR_JSON_VISIT,\n  POLICY_EDITOR_PAGE_SET,\n} from \"../action-types\";\nimport { policyEditorPageSetHandler } from \"./handler/policyeditor-page-set.handler\";\nimport { policyEditorJsonTextSetHandler } from \"./handler/policyeditor-jsontext-set.handler\";\nimport { policyEditorJsonVisitHandler } from \"./handler/policyeditor-json-visit.handler\";\nimport {policyEditorJsonSrcSetHandler} from \"./handler/policyeditor-jsonsrc-set.handler\";\n\nexport function policyEditorStateInit(): PolicyEditorState {\n  return {\n    policySrcUrl: \"\",\n    currentTab: 0,\n    jsonParseError: false,\n    currentPage: PolicyEditorPageEnum.GeneralSettings,\n    jsonCurrentPolicy: {},\n    strCurrentPolicy: \"\",\n  };\n}\n\nclass PolicyEditorReducerHandlerFactory extends ReducerBase<\n  PolicyEditorAction,\n  PolicyEditorState\n> {\n  constructor(state: PolicyEditorState) {\n    super(state, {\n      [POLICY_EDITOR_PAGE_SET]: policyEditorPageSetHandler,\n      [POLICY_EDITOR_JSON_TEXT_SET]: policyEditorJsonTextSetHandler,\n      [POLICY_EDITOR_JSON_VISIT]: policyEditorJsonVisitHandler,\n      [POLICY_EDITOR_JSON_SRC_SET]: policyEditorJsonSrcSetHandler,\n    });\n  }\n}\n\nexport const PolicyEditorReducer = (\n  state: PolicyEditorState = policyEditorStateInit(),\n  action: PolicyEditorAction\n): PolicyEditorState => {\n  const policyEditorReducerHandlerFactory =\n    new PolicyEditorReducerHandlerFactory(state);\n\n  return policyEditorReducerHandlerFactory.process(action);\n};\n","import { combineReducers, Reducer } from \"redux\";\nimport { DashboardState } from \"./dashboard/dashboard.types\";\nimport {\n  DashboardReducer,\n  dashboardStateInit,\n} from \"./dashboard/dashboard.reducer\";\nimport { PolicyEditorState } from \"./policy-editor/policy-editor.types\";\nimport {\n  PolicyEditorReducer,\n  policyEditorStateInit,\n} from \"./policy-editor/policy-editor.reducer\";\n\nexport interface ApplicationState {\n  dashboardState: DashboardState;\n  policyEditorState: PolicyEditorState;\n}\n\nexport const ApplicationReducers: Reducer<ApplicationState> =\n  combineReducers<ApplicationState>({\n    dashboardState: DashboardReducer,\n    policyEditorState: PolicyEditorReducer,\n  });\n\nexport function DefaultApplicationState(): ApplicationState {\n  return {\n    dashboardState: dashboardStateInit(),\n    policyEditorState: policyEditorStateInit(),\n  };\n}\n","import { ApplicationState, DefaultApplicationState } from \"../store\";\n\nconst stateVar = \"editor-state#0.1\";\n\nexport class SessionStorage {\n  loadState(): ApplicationState {\n    try {\n      const serializedState = sessionStorage.getItem(stateVar);\n      return JSON.parse(serializedState ? serializedState : \"\");\n    } catch (e) {\n      return DefaultApplicationState();\n    }\n  }\n\n  saveState(state: ApplicationState) {\n    try {\n      const serializedState = JSON.stringify(state);\n      sessionStorage.setItem(stateVar, serializedState);\n    } catch (e) {}\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { SessionStorage } from \"./storage/session.storage\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createStore, Store } from \"redux\";\nimport { ApplicationReducers, ApplicationState } from \"./store\";\n\nconst sessionStorage = new SessionStorage();\nconst persistedState = sessionStorage.loadState();\n\nconst composeEnhancers = composeWithDevTools({ trace: true, traceLimit: 25 });\n\nconst store: Store<ApplicationState> = createStore(\n  ApplicationReducers,\n  persistedState,\n  composeEnhancers()\n);\n\nstore.subscribe(() => {\n  sessionStorage.saveState(store.getState());\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}